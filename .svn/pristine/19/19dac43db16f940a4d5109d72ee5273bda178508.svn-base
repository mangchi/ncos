<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
	  xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout"
	  layout:decorate="~{th/cmmn/layout}">
<head>
<title>네트워크 토폴로지 전시</title>
<script type="text/javascript" th:src="@{/js/vis-network.min.js}" ></script>
</head>
<th:block layout:fragment="content">
<div class="container-wide">
	<div class="container">
		<div class="grid-row">
			<div class="item-box col-12">
				<div class="inner">
					<h4 class="item-title"><span class="iconWrapB icon_02_01"></span><strong>네트워크 토폴로지 전시</strong>
					<a href="#topologydisplay" class="iconWrapB setting icon_setting setBtn">설정</a>
					</h4>
				</div>
			</div>
		</div>
		<div class="grid-row">
			<div class="item-box col-3">
				<div class="inner">
					<h4 class="item-title"><span class="iconWrapB icon_02_02"></span><strong>네트워크 장비 목록</strong></h4>
					<div class="items">
					<!--트리메뉴 들어가는 자리 시작-->
                    <div class="treeBox treeBoxMain">
                    </div>
                    <!--트리메뉴 들어가는 자리 끝-->
					</div>
				</div>
			</div>
			<div class="item-box col-9">
				<div class="inner"> 
					<!--<h4 class="item-title">분류 및 태깅 모듈</h4>-->
					<div class="items"><div id="topology" ></div>
					</div>
				</div>
			</div>
		</div>
		<div class="grid-row">
			<div class="item-box col-12">
				<div class="inner">
					<div class="items"  style="float:right">
						<div class="schwrap">
						    <div>
							<button class="btn medium darkblue initBtn"><span class="iconBtn icon_reset"></span><strong>초기화</strong></button>
							<button class="btn medium darkblue pauseBtn"><span class="iconBtn icon_btn_08"></span><strong>일시정지</strong></button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="grid-row">
			<div class="item-box col-12">
				<div class="inner">
					<h4 class="item-title"><span class="iconWrapB icon_02_03"></span><strong>위협 발생 및 자산 이상 상태 목록</strong></h4>
					<div class="items"> 
						<!--table//-->
						<div class="tablewrap">
							<table>
							    <thead class="tHead">
								</thead>
								<tbody class="tBody">
								</tbody>
							</table>
						</div>
						<!--//table--> 
						<!--pagination//-->
						<div class="page_wrap">
							<div class="page_nation"></div>
						</div>
						<!--//pagination--> 
					</div>
				</div>
			</div>
		</div>
		<!--//Grid--> 
	</div>
</div>
<!--네트워크 토플로지 전시 설정 modal popup//-->
<div class="dim-layer">
	<div class="dimBg"></div>
	<div id="topologydisplay" class="pop-layer xxlarge"> 
		<!--Title-->
		<div class="Popup-title">
			<h3><strong>네트워크 토플로지 전시 설정</strong></h3>
			<button class="icon-close">닫기</button>
		</div>
		<div class="Popup-container"> 
			<div class="grid-row" style="min-width: auto">
				<div class="item-box col-6">
					<div class="inner">
						<h4 class="item-title"><span class="iconWrapB icon_02_02"></span><strong>네트워크 장비 목록</strong></h4>
						<div class="items"> 
							<div class="treeBox modalpop treeBoxList">
								<div class="listBox">
									<ul>
									</ul>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="item-box col-6">
					<div class="inner">
						<h4 class="item-title"><span class="iconWrapB icon_02_02"></span><strong>네트워크 장비 계위 목록</strong></h4>
						<div class="items treeParent"> 
							<!-- item contnets // -->
						<!-- 	<div class="treeBox modalpop modalTreeBox">
							</div> -->
							<!-- // item contnets --> 
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="Popup-footer">
			<div class="btnWrap">
				<div class="left"> 
				</div>
				<div class="right">
					<a href="javascript:;" class="btn medium darkblue saveBtn"><span class="iconBtn icon_btn_07"></span><strong>저장</strong></a>
					<a href="javascript:;" class="btn medium darkblue delBtn"><span class="iconBtn icon_btn_04"></span><strong>삭제</strong></a> 
					<a href="javascript:;" class="btn medium darkblue popClose"><span class="iconBtn icon_btn_08"></span><strong>취소</strong></a> 
				</div>
			</div>
		</div>
	</div>
</div>
<!--//modal popup--> 
	
<script th:inline="javascript">
	let network = null,
	    nodes = null,
	    edges = null,
	    edgesColor = 'lightgray',
	    fontColor = 'white',
	    svgColor = '#fff'
	    LENGTH_MAIN = 200,
	    LENGTH_SERVER = 150,
	    LENGTH_SUB = 50,
	    WIDTH_SCALE = 2,
	    GREEN = "green",
	    RED = "#C5000B",
	    ORANGE = "orange",
	    GRAY = "gray",
	    BLACK = "#2B1B17";
   let container = document.getElementById("topology");
   container.style.width = '1808px';
   container.style.height = '600px';
   console.log(document.body.clientWidth);
	window.addEventListener('DOMContentLoaded', () => {
		if(document.body.clientWidth <= 1920 ){
			LENGTH_MAIN = 130,
		    LENGTH_SERVER = 100,
		    LENGTH_SUB = 30,
		    WIDTH_SCALE = 1.4
			container.style.width = '1350px',
	        container.style.height = '428px';
		}
		uiMode = gfn_getStorage(ncos.uiMode);
        if(uiMode === 'white'){
		    edgesColor = 'lightgray',
		    svgColor = '#109618',
		    fontColor = 'black';
        }
        ncos.schMode = 'auto';
		init();
		ncos.intervalFunc = setInterval(searchFunc, ncos.interval);//5초
		document.querySelector('.initBtn').addEventListener('click',e => {
	    	e.preventDefault();
	    	ncos.initBtn = true;
	    	searchFunc();
			ncos.intervalFunc = setInterval(searchFunc, ncos.interval);//5초
	    });	     
		document.querySelector('.pauseBtn').addEventListener('click',e => {
	    	e.preventDefault();
	    	clearInterval(ncos.intervalFunc);
	    });	      
		   
	});

    const init = () => {

    	const headColumns = [{data_id:"id",width: "0px"}
					        ,{data_id:"detectionTime",label:"시간",data_dateFrmt:"yy-mm-dd hh:mi:ss"}
					        ,{data_id:"eventTp",label:"이벤트유형" }
					        ,{data_id:"impNm",label: "위협중요도",data_grpCd:"IMPS", data_class:"threat"}
					        ,{data_id:"detailInfo",label:"세부정보"}
					        ,{data_id:"detailBtn",label:"상세보기",data_btnNm:"상세보기" }
					        ];
	    gridInit(document.querySelector('.tablewrap'),headColumns);
	    pageInit(document.querySelector(".page_nation"),searchFunc,page.rowPerPage);
	    treeInit(document.querySelector('.treeBoxMain'));
	    searchFunc();
    }
    
    searchFunc = (invoker) => {
    	pageSearch("/getEventList",document.querySelector(".tablewrap"),document.querySelector(".page_nation"),invoker,searchFunc,searchAfterFunc);
    	
    }
    
    searchAfterFunc = (appendData) => {
    	document.querySelector('.treeBoxMain').innerHTML = '';
    	let list = appendData.linkInfoList;
    	let treejs = createInitTree(document.querySelector('.treeBoxMain'),list,false,'장비연결');
		if(list != null && list.length > 0){
			createTreeNoChk(list,treejs);
			drawTopology(appendData.topoList,appendData.errorList);
		}	
    }
    
    detailFunc = (data) => {
    	console.log("data:",data);
    	if(data.eventTp === '위협탐지'){
    		pageFunc('/threatDisp');
    	}
    	else{
    		pageFunc('/assetDisp');
    	}
 	  
    }
    
    document.querySelector('.saveBtn').addEventListener('click',(e) => {
    	let treeData = getTreeData(document.querySelector('.treeParent').querySelector('.rootLi').parentNode);
        //console.log("treeData:",treeData);
		let param = {treeData : treeData};
		gfn_asyncTranDataCall('/saveLinkInfo','POST',param,trncLinkInfoAfterFunc,true);
    });
    
    const trncLinkInfoAfterFunc = () => {
    	document.getElementById('topologydisplay').querySelector('.popClose').click();
    	searchFunc();
    }
    document.querySelector('.delBtn').addEventListener('click',(e) => {
    	let delTarget = document.querySelector('.modalTreeBox').querySelectorAll('.treejs-node');
    	deleteTree(delTarget);
    });
    document.querySelector('.setBtn').addEventListener('click',(e) => {
    	e.preventDefault();
    	let ul = document.querySelector('.listBox').querySelector('ul');
    	ul.innerHTML = '';
    	let treeParent = document.querySelector('.treeParent');
    	while(treeParent.hasChildNodes())
    	{
    		treeParent.removeChild( treeParent.firstChild );       
    	}
    	let modalTreeBox = document.createElement('div');
    	modalTreeBox.classList.add('treeBox','modalpop','modalTreeBox');
    	treeParent.appendChild(modalTreeBox);
    	treeInit(modalTreeBox);
    	gfn_asyncJsonCall('/popNetTopology','GET').then((data) => {
    		return data;

    	}).then((treeData) => {
    		let netEquipList = treeData['netEquipList'];
    		let linkInfoList = treeData['linkInfoList'];
    		if(netEquipList != null && netEquipList.length > 0){
    			
    			for(let key in netEquipList){
    				let li = document.createElement('li');
    				li.setAttribute("data-id",netEquipList[key].assetId);
    				let label = document.createElement('label');
    				let span = document.createElement('span');
    				span.setAttribute("draggable","true");
    				span.textContent = netEquipList[key].assetNm;
    				span.addEventListener('dragstart', (e) => {
    					let data = {assetId:netEquipList[key].assetId
    							  , assetNm:netEquipList[key].assetNm   							
    					};
    			
    					e.dataTransfer.setData('text/plain', JSON.stringify(data));
    				});
    				span.addEventListener('dragend', (e) => {
    					e.preventDefault();
    					e.dataTransfer.clearData("text/plain");
    				});
    				
    				label.appendChild(span); 
    				li.appendChild(label); 
    				ul.appendChild(li); 
    				
    			}
    		}	
    		let treejs = createInitTree(document.querySelector('.modalTreeBox'),linkInfoList,false,'장비연결');
			createTreeNoChk(linkInfoList,treejs,false,);
 
    		
    	}).then(() => {
    		let modalTreeBox = document.querySelector('.modalTreeBox');
    		if(modalTreeBox){
    			let assets = [];
    			let treeLis = modalTreeBox.getElementsByTagName('li');
    			for (let treeLi of treeLis) {
    				if(treeLi.getAttribute('data-id') && treeLi.getAttribute('data-id') != ''){
    					assets.push(treeLi.getAttribute('data-id'));
    				}
    					
    			}
    			let treeBoxList = document.querySelector('.treeBoxList');
    			if(treeBoxList){
    				let lis = treeBoxList.getElementsByTagName('li');
    	    		if(assets.length > 0){
    					for (let li of lis) {
    						if(assets.includes(li.getAttribute('data-id'))){
    							li.style.background = '#E5E5E5';
    						}
    					}
    				}
    	    	
    			}
    		}
    		let href = e.target.getAttribute('href');
        	layerPopup(href);
    	});

    });
    
    const drawTopology = (topoData,errorData) => {
    	//console.log("drawTopology topoData:",topoData);
    	container.innerHTML = '';
        // Create a data table with nodes.
        //nodeDataSet = new vis.DataSet();
        // Create a data table with links.
       
        edges = [];
        
    	nodes = [];
    	for(let key in topoData){
    		let itm = topoData[key];
         	//console.log("itm:",itm);
         	nodes.push({ id: itm.linkId, label: itm.assetName, group: itm.largeCategory+"", value: 6 });  //code
         	edges.push({from: itm.upperLinkId,to: itm.linkId,length: LENGTH_MAIN,width: WIDTH_SCALE * 2});
        }
    	//console.log("nodes:",nodes);
    	//console.log("edges:",edges);
    	
      // legend
         let mynetwork = document.getElementById("topology");
         var x = -mynetwork.clientWidth / 2 ;
         var y = -mynetwork.clientHeight / 2 - 100 ;
         var step = 100;
         //node legend
         /*
         nodes.push({
           id: 1000,
           x: x,
           y: y,
           label: "router",
           group: "router",
           value: 12,
           fixed: true,
           physics: false,
         });
         nodes.push({
           id: 1001,
           x: x,
           y: y + step,
           label: "switch",
           group: "switch",
           value: 8,
           fixed: true,
           physics: false,
         });
         nodes.push({
           id: 1002,
           x: x,
           y: y + 2 * step,
           label: "firewall",
           group: "firewall",
           value: 12,
           fixed: true,
           physics: false,
         });
         nodes.push({
           id: 1003,
           x: x,
           y: y + 3 * step,
           label: "server",
           group: "server",
           value: 8,
           fixed: true,
           physics: false,
         });
         nodes.push({
           id: 1004,
           x: x,
           y: y + 4 * step,
           label: "database",
           group: "database",
           value: 2,
           fixed: true,
           physics: false,
         });
         */
         // create a network
    	
    	 //nodeDataSet.update(nodes);
    	 let data = {
    			 nodes: nodes,
    	         edges: edges,
    	         };
    	 var options = { nodes: {
			  	                 borderWidth:4,
			   	                 size:30,
			   	                 color: { border: 'white',
					   	                  background: '#ffffff' //666666
					   	                 },
   	                             font:{color:fontColor,face: 'Arial',size : 16}
   	                             },             
  	                     edges: { color: edgesColor,
  	                    	      smooth:false,
  	                    	    },
  	                     groups: {
		  	                     "1": {
		  	                    	shape: "image",
			    	                image: createImage1(svgColor),
		  	                     },
		  	                     "2": {
		  	                    	shape: "image",
			    	                image: createImage2(svgColor),
		  	                     },
		  	                     "3": {
		  	                    	shape: "image",
			    	                image: createImage3(svgColor),
		  	                     },
		  	                     "4": {
		  	                    	shape: "image",
			    	                image: createImage4(svgColor),
		  	                     },
		  	                     
  	                           },
  	                            layout:{randomSeed:2},
  	                   };
    	 
    	 network = new vis.Network(container, data, options);
    	 network.on( 'click', function(properties) {
   		    let ids = properties.nodes;
   		    //console.log("ids:",ids);
   		    nodes.forEach((node) => {
	         	if(node.id == ids){
	         		console.log('clicked nodes:', node);
	         	}
	   		});
   		    
   		 });
    	 network.redraw();
    	 /*
    	 showLinkError('5-15');
    	 showNodeError('4'); */
    	 //showNodeError('11221');
    	 //console.log("drawTopology errorData:",errorData);
    	 for(let key in errorData){
      		let itm = errorData[key];
      		if(itm != null){
      			let errorId = gfn_nullValue(itm.linkId);
          		//console.log("errorId:",errorId);
          		if(errorId.indexOf('-') > -1){
          		   
                 	let errorIds = errorId.split('-');
                 	for(let errId of errorIds){
                 		showNodeError(errId);
                 	}
      
                 }
                 else{
                 	showNodeError(errorId);
                 }
      		}
          }
    	 
    	
    }

    
    const showLinkError =(errorLink) => {
    	let flag = true;
    	setInterval(() => {
    		if(flag){
    			network.clustering.updateEdge(errorLink,{dashes:[1,6], color:{color:'red', highlight:'red'}, width:WIDTH_SCALE * 2});
    			flag = false;
    		}
    		else{
    			network.clustering.updateEdge(errorLink,{dashes:[5,8], color:{color:'red', highlight:'red'}, width:WIDTH_SCALE * 2});
    			flag = true;
    		}
    		
    	},500);
    	
    }

    
    const showNodeError =(errorNode) => {
    	let flag = true;
        nodes.forEach((node) => {
        	if(node.id == errorNode){
        		if(node.group === '1'){
        			setInterval(() => {
        				if(flag){
        	    			//nodeDataSet.update([{id: errorNode,label: "switch", group: "switch",color:'red',shape: "square",borderWidth:4,size:30, value:6}]);
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage1('red'),});
        	    			flag = false;
        	    		}
        	    		else{
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage1('#109618')});
        	    			flag = true;
        	    		}
        	    	},500);
        		}
        		else if(node.group === '2'){
        			setInterval(() => {
        	    		if(flag){
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage2('red'),});
        	    			flag = false;
        	    		}
        	    		else{
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage2('#109618')});
        	    			flag = true;
        	    		}
        	    	},500);
        		}
        		else if(node.group == '3'){
        			setInterval(() => {
        	    		if(flag){
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage3('red'),});
        	    			flag = false;
        	    		}
        	    		else{
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage3('#109618')});
        	    			flag = true;
        	    		}
        	    	},500);
        		}
        		else if(node.group === '4'){
        			setInterval(() => {
        	    		if(flag){
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage4('red')});
        	    			flag = false;
        	    		}
        	    		else{
        	    			network.clustering.updateClusteredNode(errorNode,{shape: "image",image: createImage4('#C5000B')});
        	    			flag = true;
        	    		}
        	    	},500);
        		}
        	}
        	
        }); 
    	
    	
    }
    
    const createImage1 = (color) => {  //서버
    	let svg = '<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet">'
    		    +'<ellipse ry="248" rx="248" cy="256" cx="256" style="fill:'+color+';fill-opacity:0.4;stroke:'+color+';stroke-width:2;stroke-opacity:1" />' 
                + '<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">'
    			+ '<path d="M1110 5113 c-134 -22 -265 -105 -344 -217 -80 -113 -689 -1100 -716 -1161 -44 -97 -50 -147 -50 -433 0 -295 6 -336 61 -450 18 -37 56 -89 90 -124'
    			+ ' l59 -60 -60 -65 c-69 -73 -114 -155 -135 -245 -21 -91 -21 -579 0 -663 24 -95 72 -181 136 -247 l59 -60 -60 -65 c-69 -73 -114 -155 -135 -245 -21 -91 -21'
    			+ ' -576 0 -667 35 -147 150 -289 286 -354 41 -19 98 -40 127 -46 75 -16 4189 -16 4264 0 194 40 367 208 413 400 21 91 21 576 0 667 -21 90 -66 172 -135 245'
    			+ ' l-60 65 59 60 c64 66 112 152 136 247 21 84 21 572 0 663 -21 90 -66 172 -135 245 l-60 65 59 60 c34 35 72 87 90 124 55 114 61 155 61 450 0 287 -6 336 -50'
    			+ ' 435 -25 54 -612 1008 -711 1154 -48 71 -117 131 -194 169 -129 63 -40 60 -1605 59 -784 -1 -1436 -4 -1450 -6z m2940 -234 c30 -15 70 -40 88 -55 18 -16'
    			+ ' 136 -195 263 -399 l230 -370 -1036 -3 c-569 -1 -1501 -1 -2070 0 l-1035 3 230 370 c126 204 245 383 262 398 44 38 100 66 151 77 23 4 677 7 1452 7 l1410 -2'
    			+ ' 55 -26z m666 -1067 c58 -27 123 -89 153 -148 36 -69 43 -144 39 -399 l-3 -240 -33 -67 c-37 -76 -82 -120 -162 -157 l-55 -26 -2095 0 -2095 0 -55 26 c-80 37'
    			+ ' -125 81 -162 157 l-33 67 -3 240 c-4 255 3 330 39 399 25 50 83 112 124 134 81 42 12 41 2200 39 l2090 -2 51 -23z m0 -1280 c58 -27 123 -89 153 -148 36'
    			+ ' -69 43 -144 39 -399 l-3 -240 -33 -67 c-37 -76 -82 -120 -162 -157 l-55 -26 -2095 0 -2095 0 -55 26 c-80 37 -125 81 -162 157 l-33 67 -3 240 c-4 255 3'
    			+ ' 330 39 399 25 50 83 112 124 134 81 42 12 41 2200 39 l2090 -2 51 -23z m0 -1280 c58 -27 123 -89 153 -148 36 -69 43 -144 39 -399 l-3 -240 -33 -67 c-37'
    			+ ' -76 -82 -120 -162 -157 l-55 -26 -2095 0 -2095 0 -55 26 c-80 37 -125 81 -162 157 l-33 67 -3 240 c-4 255 3 330 39 399 25 50 83 112 124 134 81 42 12 41 2200 39 l2090 -2 51 -23z"/>'
    			+ '<path d="M680 3616 c-71 -16 -107 -35 -157 -86 -68 -67 -88 -119 -88 -225 0 -78 4 -97 27 -140 32 -60 87 -114 148 -146 37 -20 60 -24 135 -24 106 0 158'
    			+ ' 20 225 88 51 51 75 96 88 167 41 222 -157 414 -378 366z m139 -237 c82 -81 -15 -218 -118 -165 -67 35 -78 122 -20 170 44 38 98 36 138 -5z"/>'
    			+ '<path d="M2645 3623 c-88 -23 -111 -140 -37 -190 26 -17 71 -18 912 -18 841 0 886 1 912 18 58 39 58 135 0 174 -26 17 -71 18 -897 19 -478 1 -879 0 -890 -3z"/>'
    			+ '<path d="M2618 3184 c-65 -35 -73 -121 -17 -168 l31 -26 888 0 888 0 31 26 c57 48 47 135 -19 169 -43 22 -1761 22 -1802 -1z"/>'
    			+ '<path d="M680 2336 c-71 -16 -107 -35 -157 -86 -68 -67 -88 -119 -88 -225 0 -78 4 -97 27 -140 32 -60 87 -114 148 -146 37 -20 60 -24 135 -24 106 0 158'
    			+ ' 20 225 88 51 51 75 96 88 167 41 222 -157 414 -378 366z m139 -237 c82 -81 -15 -218 -118 -165 -67 35 -78 122 -20 170 44 38 98 36 138 -5z"/>'
    			+ '<path d="M2645 2343 c-88 -23 -111 -140 -37 -190 26 -17 71 -18 912 -18 841 0 886 1 912 18 58 39 58 135 0 174 -26 17 -71 18 -897 19 -478 1 -879 0 -890 -3z"/>'
    			+ '<path d="M2618 1904 c-65 -35 -73 -121 -17 -168 l31 -26 888 0 888 0 31 26 c57 48 47 135 -19 169 -43 22 -1761 22 -1802 -1z"/>'
    			+ '<path d="M680 1056 c-71 -16 -107 -35 -157 -86 -68 -67 -88 -119 -88 -225 0 -78 4 -97 27 -140 32 -60 87 -114 148 -146 37 -20 60 -24 135 -24 106 0 158'
    			+ ' 20 225 88 51 51 75 96 88 167 41 222 -157 414 -378 366z m139 -237 c82 -81 -15 -218 -118 -165 -67 35 -78 122 -20 170 44 38 98 36 138 -5z"/>'
    			+ '<path d="M2645 1063 c-88 -23 -111 -140 -37 -190 26 -17 71 -18 912 -18 841 0 886 1 912 18 58 39 58 135 0 174 -26 17 -71 18 -897 19 -478 1 -879 0 -890 -3z"/>'
    			+ '<path d="M2618 624 c-65 -35 -73 -121 -17 -168 l31 -26 888 0 888 0 31 26 c57 48 47 135 -19 169 -43 22 -1761 22 -1802 -1z"/></g></svg>';
    	        
    	return "data:image/svg+xml;charset=utf-8,"+ encodeURIComponent(svg); 
    	
    }
    
    const createImage2 = (color) => {  //단말
    	let svg = '<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet">'
    		    +'<ellipse ry="248" rx="248" cy="256" cx="256" style="fill:'+color+';fill-opacity:0.4;stroke:'+color+';stroke-width:2;stroke-opacity:1" />' 
    	        + '<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">'
    	        + '<path d="M3117 4570 c-72 -13 -131 -46 -185 -104 -77 -85 -82 -112 -82 -422 l0 -264 168 0 c227 0 309 -25 423 -127 l47 -43 514 0 515 0 21 -23 c29 -31 28 '
    	        + '-72 -3 -102 l-24 -25 -472 0 -471 0 7 -22 c4 -13 10 -92 12 -175 l5 -153 460 0 459 0 24 -25 c32 -31 33 -74 2 -103 -23 -22 -25 -22 -485 -22 l-462 0 0 '
    	        + '-180 0 -180 465 0 464 0 21 -22 c25 -27 26 -69 1 -99 l-19 -24 -466 -3 -466 -3 0 -517 c0 -570 -1 -584 -62 -690 -39 -69 -120 -149 -184 -184 -86 -47 -152 '
    	        + '-58 -332 -58 l-164 0 4 -73 c4 -98 42 -174 116 -234 94 -76 60 -74 933 -71 l774 3 57 28 c70 34 131 101 158 173 20 54 20 70 20 1768 0 1448 -2 1720 -14 '
    	        + '1760 -26 86 -104 166 -198 204 -39 15 -110 17 -788 18 -410 1 -766 -2 -793 -6z m1424 -479 c25 -30 24 -72 -1 -99 l-21 -22 -624 0 c-612 0 -625 0 -645 20 -34 '
    	        + '34 -21 102 23 120 12 5 294 8 635 7 l614 -2 19 -24z m-556 -2315 c201 -93 206 -374 9 -472 -53 -26 -174 -26 -225 -1 -158 78 -197 280 -80 410 48 54 121 87  191 87 37 0 72 -8 105 -24z"/>'
    	        + '<path d="M412 3609 c-74 -29 -153 -110 -181 -184 -21 -57 -21 -59 -19 -1048 l3 -992 24 -47 c31 -63 88 -121 153 -155 l53 -28 1370 0 c1329 0 1372 1 1420 '
    	        + '19 65 26 147 103 176 169 l24 52 0 1000 0 1000 -28 53 c-35 67 -90 122 -153 153 l-49 24 -1370 2 c-1360 2 -1370 2 -1423 -18z m2728 -1074 l0 -795 -1315 0 '
    	        + '-1315 0 0 795 0 795 1315 0 1315 0 0 -795z m-1127 -1012 c29 -33 31 -68 4 -99 l-25 -29 -152 -3 c-166 -4 -200 3 -219 44 -16 35 -14 48 10 78 l20 26 173 0 c152 0 175 -2 189 -17z"/>'
    	        + '<path d="M1210 845 l0 -155 -128 0 c-112 0 -131 -2 -145 -18 -24 -27 -22 -85 4 -108 20 -18 51 -19 853 -22 457 -2 846 0 864 3 66 12 95 82 52 125 -18 18 '
    	        + '33 20 -145 20 l-125 0 0 155 0 155 -615 0 -615 0 0 -155z"/></g></svg>';
    	        
    	return "data:image/svg+xml;charset=utf-8,"+ encodeURIComponent(svg); 
    	
    }
    
    const createImage3 = (color) => {  //네트워크 장비
    	let svg = '<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet">'
    		    +'<ellipse ry="248" rx="248" cy="256" cx="256" style="fill:'+color+';fill-opacity:0.4;stroke:'+color+';stroke-width:2;stroke-opacity:1" />' 
       		    + '<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">'
       		    + '<path d="M413 5106 c-193 -47 -353 -209 -399 -402 -41 -175 25 -389 157 -508 l39 -36 -39 -36 c-93 -84 -159 -224 -168 -359 -10 -149 41 -284 149 -400 l57'
       		    + ' -61 -54 -53 c-238 -236 -192 -633 96 -821 122 -79 69 -75 1029 -75 816 0 858 1 914 19 210 69 366 285 366 506 0 130 -62 279 -155 372 l-53 53 59 62 c67 73'
       		    + ' 122 178 140 271 32 168 -36 373 -162 487 l-41 37 40 34 c89 75 158 218 169 349 21 256 -157 500 -409 560 -86 20 -1652 21 -1735 1z m1737 -227 c79 -37'
       		    + ' 125 -81 162 -157 28 -56 32 -76 32 -137 -1 -124 -69 -231 -180 -286 l-49 -24 -835 0 -835 0 -49 24 c-154 76 -224 262 -155 411 33 71 70 114 127 147 89 53'
       		    + ' 78 52 932 50 l795 -2 55 -26z m-6 -850 c33 -12 74 -38 101 -65 161 -156 121 -414 -77 -514 l-61 -30 -827 0 -827 0 -61 30 c-251 126 -229 488 36 585 30 11'
       		    + ' 187 14 849 14 797 1 813 1 867 -20z m14 -858 c109 -49 186 -170 186 -291 0 -121 -77 -242 -186 -291 l-53 -24 -825 0 -825 0 -52 24 c-130 58 -211 212'
       		    + ' -183 348 7 32 19 71 27 87 21 41 92 115 127 133 80 42 78 42 921 40 l810 -2 53 -24z"/>'
       		    + '<path d="M459 4661 c-47 -48 -37 -130 21 -164 22 -14 55 -17 160 -17 105 0 138 3 160 17 58 34 68 116 21 164 l-29 29 -152 0 -152 0 -29 -29z"/>'
       		    + '<path d="M1099 4661 c-47 -48 -37 -130 21 -164 22 -14 55 -17 160 -17 105 0 138 3 160 17 58 34 68 116 21 164 l-29 29 -152 0 -152 0 -29 -29z"/>'
       		    + '<path d="M478 3823 c-56 -35 -66 -117 -19 -164 l29 -29 152 0 152 0 29 29 c33 33 39 83 15 130 -23 43 -54 51 -199 51 -105 0 -137 -4 -159 -17z"/>'
       		    + '<path d="M1118 3823 c-56 -35 -66 -117 -19 -164 l29 -29 152 0 152 0 29 29 c33 33 39 83 15 130 -23 43 -54 51 -199 51 -105 0 -137 -4 -159 -17z"/>'
       		    + '<path d="M494 2976 c-41 -18 -64 -52 -64 -96 0 -82 53 -110 210 -110 157 0 210 28 210 110 0 45 -23 78 -66 96 -45 19 -247 18 -290 0z"/>'
       		    + '<path d="M1134 2976 c-41 -18 -64 -52 -64 -96 0 -82 53 -110 210 -110 157 0 210 28 210 110 0 45 -23 78 -66 96 -45 19 -247 18 -290 0z"/>'
       		    + '<path d="M3795 4574 c-42 -21 -352 -332 -371 -372 -29 -62 -16 -82 169 -269 93 -95 185 -179 204 -188 83 -39 175 46 142 131 -5 15 -42 60 -81 100 l-71 74'
       		    + ' 111 0 c88 0 123 -4 166 -21 71 -26 139 -92 174 -167 24 -52 26 -72 31 -223 7 -185 11 -198 76 -219 45 -15 98 7 120 51 26 49 17 350 -13 431 -44 122 -116'
       		    + ' 213 -216 277 -99 62 -170 82 -318 88 l-128 6 74 77 c82 86 96 121 70 175 -15 31 -64 65 -96 65 -7 0 -26 -7 -43 -16z"/>'
       		    + '<path d="M2960 2756 c-281 -80 -450 -358 -385 -635 21 -89 77 -189 140 -252 l54 -53 -57 -61 c-108 -116 -159 -251 -149 -400 9 -135 75 -275 168 -359 l39'
       		    + ' -36 -39 -36 c-93 -84 -159 -224 -168 -359 -10 -154 42 -290 157 -406 71 -72 173 -128 268 -148 36 -7 311 -11 855 -11 672 0 812 3 865 15 252 60 430 304'
       		    + ' 409 560 -11 130 -78 268 -168 350 l-41 37 40 34 c22 18 57 60 78 91 140 212 118 480 -55 666 l-59 62 53 53 c63 63 119 164 140 253 61 258 -86 525 -340'
       		    + ' 622 l-60 22 -850 2 c-664 1 -860 -1 -895 -11z m1758 -225 c109 -49 186 -170 186 -291 0 -121 -77 -242 -186 -291 l-53 -24 -825 0 -825 0 -52 24 c-130 58'
       		    + ' -211 212 -183 348 7 32 19 71 27 87 21 41 92 115 127 133 80 42 78 42 921 40 l810 -2 53 -24z m10 -861 c237 -119 234 -454 -4 -571 l-49 -24 -835 0 -835 0'
       		    + ' -49 24 c-239 118 -241 452 -4 571 l61 30 827 0 827 0 61 -30z m-24 -841 c118 -43 199 -163 200 -294 0 -61 -4 -81 -32 -137 -37 -76 -83 -120 -162 -157 l-55'
       		    + ' -26 -815 0 -815 0 -55 26 c-79 37 -125 81 -162 157 -28 56 -32 76 -32 136 1 107 48 201 131 257 87 60 47 58 930 58 797 1 813 1 867 -20z"/>'
       		    + '<path d="M3054 2336 c-41 -18 -64 -52 -64 -96 0 -82 53 -110 210 -110 157 0 210 28 210 110 0 45 -23 78 -66 96 -45 19 -247 18 -290 0z"/>'
       		    + '<path d="M3694 2336 c-41 -18 -64 -52 -64 -96 0 -82 53 -110 210 -110 157 0 210 28 210 110 0 45 -23 78 -66 96 -45 19 -247 18 -290 0z"/>'
       		    + '<path d="M3019 1461 c-47 -48 -37 -130 21 -164 41 -25 279 -25 320 0 58 34 68 116 21 164 l-29 29 -152 0 -152 0 -29 -29z"/>'
       		    + '<path d="M3659 1461 c-47 -48 -37 -130 21 -164 41 -25 279 -25 320 0 58 34 68 116 21 164 l-29 29 -152 0 -152 0 -29 -29z"/>'
       		    + '<path d="M3038 623 c-56 -35 -66 -117 -19 -164 l29 -29 152 0 152 0 29 29 c33 33 39 83 15 130 -23 43 -54 51 -199 51 -105 0 -137 -4 -159 -17z"/>'
       		    + '<path d="M3678 623 c-56 -35 -66 -117 -19 -164 l29 -29 152 0 152 0 29 29 c33 33 39 83 15 130 -23 43 -54 51 -199 51 -105 0 -137 -4 -159 -17z"/>'
       		    + '<path d="M703 1695 c-58 -25 -66 -56 -61 -249 4 -150 8 -179 29 -236 53 -141 138 -234 273 -300 90 -44 168 -59 305 -60 l84 0 -76 -79 c-46 -48 -77 -90 -82'
       		    + ' -109 -15 -70 57 -142 128 -126 24 5 78 52 204 177 95 93 179 185 188 204 31 64 19 82 -179 279 -197 198 -215 210 -280 179 -43 -21 -70 -73 -61 -117 5 -19'
       		    + ' 36 -61 83 -110 l76 -80 -124 4 c-108 3 -132 6 -174 27 -66 33 -122 91 -154 160 -24 51 -27 70 -32 222 -5 181 -9 191 -67 216 -39 16 -40 16 -80 -2z"/></g></svg>';

    	        
    	return "data:image/svg+xml;charset=utf-8,"+ encodeURIComponent(svg); 
    	
    }
    
    const createImage4 = (color) => {  //보안장비
    	let svg = '<svg version="1.0" xmlns="http://www.w3.org/2000/svg" width="512.000000pt" height="512.000000pt" viewBox="0 0 512.000000 512.000000" preserveAspectRatio="xMidYMid meet">'
    		    +'<ellipse ry="248" rx="248" cy="256" cx="256" style="fill:'+color+';fill-opacity:0.4;stroke:'+color+';stroke-width:2;stroke-opacity:1" />' 
                + '<g transform="translate(0.000000,512.000000) scale(0.100000,-0.100000)" fill="#000000" stroke="none">'
    			+ '<path d="M105 5106 c-37 -17 -80 -62 -94 -99 -7 -18 -11 -150 -11 -360 0 -373 0 -373 73 -431 l39 -31 576 -3 c318 -2 596 0 620 3 50 7 108 53 128 102 20 47'
    			+ ' 20 680 0 726 -16 39 -61 82 -99 96 -45 17 -1193 14 -1232 -3z m1175 -456 l0 -300 -555 0 -555 0 0 300 0 300 555 0 555 0 0 -300z"/>'
    			+ '<path d="M390 4767 c-52 -26 -60 -89 -18 -134 20 -21 30 -23 140 -23 113 0 120 1 143 25 42 41 31 105 -22 133 -29 16 -211 15 -243 -1z"/>'
    			+ '<path d="M1721 5102 c-19 -9 -48 -34 -65 -55 l-31 -39 -3 -331 c-2 -215 0 -345 7 -368 15 -51 48 -88 95 -110 39 -18 83 -19 836 -19 753 0 797 1 836 19'
    			+ ' 47 22 80 59 95 110 7 23 9 153 7 368 l-3 331 -31 39 c-62 78 -2 73 -904 73 -747 0 -807 -1 -839 -18z m1609 -452 l0 -300 -770 0 -770 0 0 300 0 300 770 0 770 0 0 -300z"/>'
    			+ '<path d="M2012 4770 c-31 -13 -55 -71 -43 -104 21 -53 35 -56 296 -56 229 0 242 1 263 20 46 43 37 109 -18 137 -30 15 -461 17 -498 3z"/>'
    			+ '<path d="M3775 5106 c-37 -17 -80 -62 -94 -99 -17 -45 -15 -679 3 -720 20 -49 78 -95 128 -102 24 -3 302 -5 620 -3 l576 3 39 31 c73 58 73 58 73 432 0 361'
    			+ ' -1 373 -56 424 -16 15 -42 32 -57 37 -45 17 -1193 14 -1232 -3z m1175 -456 l0 -300 -555 0 -555 0 0 300 0 300 555 0 555 0 0 -300z"/>'
    			+ '<path d="M4572 4770 c-31 -13 -55 -71 -43 -104 16 -42 49 -56 126 -56 64 0 74 3 95 25 31 33 32 87 2 117 -17 18 -36 23 -89 25 -38 2 -78 -2 -91 -7z"/>'
    			+ '<path d="M105 3996 c-37 -17 -80 -62 -94 -99 -15 -39 -15 -676 0 -714 15 -40 48 -73 94 -94 38 -18 82 -19 778 -19 l737 0 0 -255 0 -255 -85 0 -85 0 0 103'
    			+ ' c0 128 -21 178 -90 214 l-43 23 -592 0 -592 0 -43 -23 c-30 -16 -51 -37 -67 -67 l-24 -45 3 -346 3 -346 28 -36 c56 -74 40 -72 539 -75 l448 -3 0 -84 0'
    			+ ' -85 -443 0 -444 0 -43 -23 c-30 -16 -51 -37 -67 -67 l-24 -45 3 -346 3 -346 28 -36 c56 -74 40 -72 540 -75 l447 -3 0 -202 c1 -111 5 -232 9 -269 24 -182'
    			+ ' 165 -335 340 -368 74 -14 2308 -14 2382 0 175 33 316 186 340 368 4 37 8 158 9 269 l0 202 448 3 c499 3 483 1 539 75 l28 36 3 346 3 346 -24 45 c-16 30'
    			+ ' -37 51 -67 67 l-43 23 -444 0 -443 0 0 85 0 84 448 3 c499 3 483 1 539 75 l28 36 3 346 3 346 -24 45 c-16 30 -37 51 -67 67 l-43 23 -592 0 -592 0 -43 -23'
    			+ ' c-69 -36 -90 -86 -90 -214 l0 -103 -85 0 -85 0 0 255 0 255 738 0 c695 0 739 1 777 19 46 21 79 54 94 94 17 45 15 679 -3 720 -16 39 -61 82 -99 96 -20 8'
    			+ ' -762 11 -2450 11 -2001 -1 -2427 -3 -2452 -14z m1656 -203 c-54 -61 -108 -171 -126 -258 -8 -38 -15 -121 -15 -182 l0 -113 -725 0 -725 0 0 300 0 300 816 0'
    			+ ' 816 0 -41 -47z m1220 37 c80 -15 157 -57 220 -119 66 -66 104 -142 119 -231 5 -37 10 -249 10 -492 l0 -428 -85 0 -84 0 -3 458 c-3 456 -3 457 -26 504 -13'
    			+ ' 27 -42 64 -65 83 -72 62 -97 65 -507 65 -410 0 -435 -3 -507 -65 -23 -19 -52 -56 -65 -83 -23 -47 -23 -48 -26 -504 l-3 -458 -84 0 -85 0 0 428 c0 243 5'
    			+ ' 455 10 492 6 36 23 90 37 120 52 107 180 207 293 229 64 13 786 13 851 1z m1969 -290 l0 -300 -725 0 -725 0 0 113 c0 61 -7 144 -15 182 -18 87 -72 197'
    			+ ' -126 258 l-41 47 816 0 816 0 0 -300z m-2011 -55 c16 -8 34 -28 40 -46 7 -22 11 -171 11 -455 l0 -424 -430 0 -430 0 0 424 c0 283 4 433 11 455 21 59 28 60'
    			+ ' 417 61 292 0 358 -3 381 -15z m-1659 -857 l0 -103 -40 -23 c-122 -70 -181 -163 -215 -344 l-5 -28 -425 0 -425 0 0 300 0 300 555 0 555 0 0 -102z m3670'
    			+ ' -198 l0 -300 -424 0 c-465 0 -436 -4 -436 59 0 104 -111 267 -217 319 l-33 16 0 103 0 103 555 0 555 0 0 -300z m-1220 -51 c72 -15 129 -62 165 -134 l30 -60'
    			+ ' 0 -905 0 -905 -28 -57 c-34 -69 -84 -113 -151 -133 -74 -22 -2298 -22 -2372 0 -67 20 -117 64 -151 133 l-28 57 0 906 0 905 30 59 c36 69 87 113 152 131 64'
    			+ ' 17 2274 20 2353 3z m-2710 -1059 l0 -300 -425 0 -425 0 0 300 0 300 425 0 425 0 0 -300z m3930 0 l0 -300 -425 0 -425 0 0 300 0 300 425 0 425 0 0 -300z"/>'
    			+ '<path d="M390 3657 c-54 -28 -61 -99 -13 -137 24 -19 41 -20 264 -20 236 0 238 0 265 24 36 30 39 86 6 119 -22 21 -29 22 -260 25 -178 2 -243 -1 -262 -11z"/>'
    			+ '<path d="M374 2536 c-21 -18 -28 -32 -28 -61 0 -29 7 -43 28 -61 25 -22 36 -24 140 -24 109 0 114 1 140 26 28 29 35 77 13 105 -24 31 -56 39 -161 39 -96 0 -107 -2 -132 -24z"/>'
    			+ '<path d="M4554 2536 c-39 -33 -39 -89 0 -122 23 -20 38 -24 96 -24 58 0 73 4 96 24 21 18 28 32 28 61 0 29 -7 43 -28 61 -23 20 -38 24 -96 24 -58 0 -73 -4 -96 -24z"/>'
    			+ '<path d="M2425 2124 c-49 -8 -165 -44 -221 -69 -169 -75 -344 -250 -418 -418 -59 -131 -71 -192 -71 -357 0 -165 12 -226 71 -357 74 -168 249 -343 418 -418'
    			+ ' 130 -58 191 -70 356 -70 165 0 226 12 356 70 169 75 344 250 418 418 59 132 71 192 70 357 0 122 -4 168 -18 215 -67 219 -188 386 -362 498 -145 94 -256'
    			+ ' 127 -434 132 -74 2 -148 1 -165 -1z m297 -183 c309 -79 518 -346 518 -661 0 -374 -306 -680 -680 -680 -505 0 -831 528 -609 984 137 281 468 434 771 357z"/>'
    			+ '<path d="M2490 1696 c-105 -22 -199 -97 -243 -194 -16 -36 -21 -67 -22 -132 0 -77 3 -92 33 -152 37 -76 101 -138 167 -163 l43 -17 4 -110 c3 -106 4 -111 31'
    			+ ' -134 36 -31 78 -31 114 0 27 23 28 28 31 134 l4 110 43 17 c66 25 130 87 167 163 30 60 33 76 33 152 0 72 -4 93 -28 141 -30 62 -93 126 -154 157 -32 17'
    			+ ' -142 44 -162 41 -3 0 -31 -6 -61 -13z m152 -182 c78 -40 110 -152 66 -229 -34 -58 -80 -85 -145 -85 -65 0 -103 18 -140 67 -24 31 -28 46 -28 98 0 52 4 67 28 98 54 72 138 91 219 51z"/>'
    			+ '<path d="M374 1426 c-21 -18 -28 -32 -28 -61 0 -29 7 -43 28 -61 27 -24 29 -24 266 -24 237 0 239 0 266 24 21 18 28 32 28 61 0 29 -7 43 -28 61 -27 24 -29 24 -266 24 -237 0 -239 0 -266 -24z"/>'
    			+ '</g></svg>';
    	        
    	return "data:image/svg+xml;charset=utf-8,"+ encodeURIComponent(svg); 
    	
    }

</script>
</th:block>
</html>
