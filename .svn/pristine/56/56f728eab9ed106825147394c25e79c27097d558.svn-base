<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
	xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout">
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<meta name="_csrf" th:content="${_csrf.token}"/>
<meta name="_csrf_header" th:content="${_csrf.headerName}"/>
<title>육상메인화면</title>
<link rel="shortcut icon" href="/img/favicon.ico">
<link rel="stylesheet" href="/css/all.min.css" />
<link rel="stylesheet" href="/css/reset.css" />
<link th:if="${uiMode.equals('white')}" rel="stylesheet" href="/css/front-light.css" />
<link th:unless="${uiMode.equals('white')}" rel="stylesheet" href="/css/front-dark.css" />
<!-- <link rel="stylesheet" href="/css/common.css" /> -->
<script type="text/javascript" th:src="@{/js/cmmn.js}" ></script> 
<script type="text/javascript" th:src="@{/js/grid.js}" ></script>
<script type="text/javascript" th:src="@{/js/page.js}" ></script>
<script type="text/javascript" th:src="@{/js/tree.js}" ></script>
<script type="text/javascript" th:src="@{/js/msg.js}" ></script>
<script type="text/javascript" th:src="@{/js/input.js}" ></script>
<script type="text/javascript" th:src="@{/js/crypto/ase.js}"></script>
<script type="text/javascript" th:src="@{/js/crypto/core-min.js}"></script>
<script type="text/javascript" th:src="@{/js/crypto/md5-min.js}"></script>
<script type="text/javascript" th:src="@{/js/chart.js}" ></script>
<title>NCOS</title>
</head>
<script>

</script>
<body class="app">
    <!--header 영역 시작-->
	<th:block th:replace="~{th/cmmn/header::header}"></th:block>
	<th:block th:replace="~{th/cmmn/leftMenu::menu}"></th:block>
    <!-- content fragment 사용 -->
    <th:block layout:fragment="content"></th:block>
    <th:block th:replace="~{th/cmmn/footer::footer}"></th:block>
    <!--화이트리스트 정책설정 리스트 modal popup//-->
<div class="dim-layer">
	<div class="dimBg"></div>
	<div id="whiteList" class="pop-layer xxlarge"> 
		<!--Title-->
		<div class="Popup-title">
			<h3><strong>화이트 리스트 정책설정 팝업창(Whitelist)</strong></h3>
			<button class="icon-close">닫기</button>
		</div>
		<div class="Popup-container"> 
			<!--Contens-->
			<div class="Popup-contents">
				<div class="tablewrap" style="height:500px; overflow:auto;">
					<table >
						<thead class="tHead">
						</thead>
						<tbody class="tBody" >
						</tbody>
					</table>
				</div>
			</div>
		</div>
		<div class="Popup-footer">
		<div class="btnWrap">
		<div class="left"> <a href="#whiteListReg" class="btn medium darkblue popAddBtn"><span class="iconBtn icon_btn_02"></span><strong>추가</strong></a> <a href="#whiteListReg" class="btn medium darkblue popModBtn"><span class="iconBtn icon_btn_03"></span><strong>수정</strong></a> <a href="javascript:;" class="btn medium darkblue popDelBtn"><span class="iconBtn icon_btn_04"></span><strong>삭제</strong></a> </div>
		<div class="right"> <a href="javascript:;" class="btn medium darkblue popSaveBtn"><span class="iconBtn icon_btn_07"></span><strong>저장</strong></a>
			<a href="javascript:;" class="btn medium darkblue popClose"><span class="iconBtn icon_btn_08"></span><strong>취소</strong></a>
		</div>
		</div>
		</div>
	</div>
</div>
<!--//modal popup--> 

<!--화이트리스트 정책설정 modal popup//-->
<div class="dim-layer">
	<div class="dimBg"></div>
	<div id="whiteListReg" class="pop-layer ssmall"> 
		<!--Title-->
		<div class="Popup-title">
			<h3><span class="iconWrapB icon_03_01"></span><strong>화이트 리스트 정책설정</strong></h3>
			<button class="icon-close">닫기</button>
		</div>
		<div class="Popup-container"> 
			<!--Contens-->
			<div class="Popup-contents">
				<div class="assetWrap">
					<ul >
						<li>
							<label>
								<span>정책명</span>
								<input type="text" id="policyName" class="form-control" placeholder="정책명">
								<input type="hidden" id="policyId">
								<em class="message"></em>
							</label>
						</li>
						<li>
							<label>
								<span>송신IP</span>
								<input type="text" id="srcIp" class="form-control" placeholder="255.255.255.2">
								<em class="message"></em>
							</label>
						</li>
						<li>
						    <label>
								<span>송신Mask</span>
								<input type="text" id="srcMask" class="form-control" placeholder="255.255.255.0">
								<em class="message"></em>
							</label>
						</li>
						<li>
						    <label>
								<span>송신시작Port</span>
								<input type="text" id="srcStartPort" class="form-control number" maxlength="5"  placeholder="4000">
								<em class="message"></em>
							</label>
						</li>
						<li>
						    <label>
								<span>송신종료Port</span>
								<input type="text" id="srcEndPort" class="form-control number"maxlength="5"   placeholder="5000">
								<em class="message"></em>
							</label>
						</li>
					</ul>
					<ul class="topLine">
						<li>
							<label>
								<span>수신IP</span>
								<input type="text" id="dstIp" class="form-control" placeholder="255.255.255.2">
								<em class="message"></em>
							</label>
						</li>
						<li>
						    <label>
								<span>수신Mask</span>
								<input type="text" id="dstMask" class="form-control" placeholder="255.255.255.0">
								<em class="message"></em>
							</label>
						</li>
						<li>
						    <label>
								<span>수신시작Port</span>
								<input type="text" id="dstStartPort" class="form-control number"  maxlength="5" placeholder="4000">
								<em class="message"></em>
							</label>
						</li>
						<li>
						    <label>
								<span>수신종료Port</span>
								<input type="text" id="dstEndPort" class="form-control number" maxlength="5" placeholder="5000">
								<em class="message"></em>
							</label>
						</li>
					</ul>
					<ul class="topLine">
						<li>
						    <div class="selectWrap">전송 프로토콜
						        <div class="select">
									<div class="selected">
										<div data-value='' class="selected-value">선택</div>
										<div class="arrow"></div>
									</div>
									<ul id="protocol">
									</ul>
								</div>
							</div>
						</li>
						<li>
						    <div  class="selectWrap">정책
							    <div class="select">
									<div class="selected">
										<div class="selected-value">선택</div>
										<div class="arrow"></div>
									</div>
									<ul id="policy">
									</ul>
								</div>
							</div>
						</li>
					</ul>
				</div>
			</div>
		</div>
		<div class="Popup-footer">
			<a href="javascript:;" class="btn medium darkblue saveBtn"><span class="iconBtn icon_btn_09"></span><strong>확인</strong></a>
			<a href="javascript:;" class="btn medium darkblue popClose"><span class="iconBtn icon_btn_08"></span><strong>취소</strong></a>
		</div>
	</div>
</div>
<!--//modal popup--> 

<!--정오탐 판정 modal popup//-->
<div class="dim-layer">
	<div class="dimBg"></div>
	<div id="tfpositive" class="pop-layer large"> 
		<!--Title-->
		<div class="Popup-title">
			<h3><span class="iconWrapB icon_08_01"></span><strong>정오탐판정</strong></h3>
			<button class="icon-close">닫기</button>
		</div>
		<div class="Popup-container"> 
			<!--Contens-->
			<div class="Popup-contents">
				<div class="assetWrap tfpositive">
					<ul class="clfix">
					    <li>
							<label>
								<span th:if="${!(activeProfile.equals('hmmLand') || activeProfile.equals('hmmNavy') || activeProfile.equals('lnsystem-hmm-land') || activeProfile.equals('lnsystem-hmm-navy'))}">부대명</span>
								<span th:if="${activeProfile.equals('hmmLand') || activeProfile.equals('hmmNavy') || activeProfile.equals('lnsystem-hmm-land') || activeProfile.equals('lnsystem-hmm-navy')}">회사명</span>
								<input type="text" id="unitId" class="form-control" readonly>
								<input type="hidden" id="threatId">
								<input type="hidden" id="analysisId">
							</label>
						</li>
						<li>
							<label>
								<span th:if="${!(activeProfile.equals('hmmLand') || activeProfile.equals('hmmNavy') || activeProfile.equals('lnsystem-hmm-land') || activeProfile.equals('lnsystem-hmm-navy'))}">함명</span>
								<span th:if="${activeProfile.equals('hmmLand') || activeProfile.equals('hmmNavy') || activeProfile.equals('lnsystem-hmm-land') || activeProfile.equals('lnsystem-hmm-navy')}">선박명</span>								
								<input type="text" id="shipId" class="form-control" readonly>
							</label>
						</li>
						<li>
							<label>
								<span>탐지시간</span>
								<input type="text" id="detectionTime" class="form-control" readonly>
							</label>
						</li>
						<li>
							<label>
								<span>송신IP</span>
								<input type="text" id="srcIp" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>송신Port</span>
								<input type="text" id="srcPort" class="form-control" readonly>
							</label>
						</li>
						<li>
							<label>
								<span>수신IP</span>
								<input type="text" id="dstIp" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>수신Port</span>
								<input type="text" id="dstPort" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>전송 프로토콜</span>
								<input type="text" id="protocol" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>페이로드 크기</span>
								<input type="text" id="payloadSize" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>파편화 유무</span>
								<input type="text" id="fragmentation" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>파편화 ID</span>
								<input type="text" id="fragmentId" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>탐지 위협명</span>
								<input type="text" id="detectionThreatName" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>탐지방식</span>
								<input type="text" id="threatDetectionMethod" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <label>
								<span>위협 중요도</span>
								<input type="text" id="threatImportance" class="form-control" readonly>
							</label>
						</li>
						<li>
						    <div>정오탐 판정
						        <div class="select" style="padding-left: 35px">
									<div class="selected">
										<div data-value='' class="selected-value">선택</div>
										<div class="arrow"></div>
									</div>
									<ul id="analysisResult">
									</ul>
								</div>
							</div>
						</li>
						<li>
						    <div>조치결과
						        <div class="select" style="padding-left: 35px">
									<div class="selected">
										<div data-value='' class="selected-value">선택</div>
										<div class="arrow"></div>
									</div>
									<ul id="actionResult">
									</ul>
								</div>
							</div>
						</li>
						<li style="float: nont; width: 100%; display: block">
						    <label>
								<span>페이로드</span>
							    <textarea id="payloadContent" cols="10" rows="10" readonly="readonly"></textarea>
							</label>
						</li>
					</ul>
				</div>
			</div>
		</div>
		<div class="Popup-footer">
			<a href="javascript:;" class="btn medium darkblue saveBtn"><span class="iconBtn icon_btn_09"></span><strong>확인</strong></a>
			<a href="javascript:;" class="btn medium darkblue popClose"><span class="iconBtn icon_btn_08"></span><strong>취소</strong></a>
		</div>
	</div>
</div>
<!--//modal popup--> 

<!--위성 전송 환경 설정 modal popup//-->
<div class="dim-layer">
	<div class="dimBg"></div>
	<div id="settingReg" class="pop-layer large"> 
		<!--Title-->
		<div class="Popup-title">
			<h3><span class="iconWrapB icon_setting"></span><strong>위성 전송 환경 설정</strong></h3>
			<button class="icon-close">닫기</button>
		</div>
		<div class="Popup-container"> 
			<!--Contens-->
			<div class="Popup-contents">
				<div class="settingWrap">
					<dl class="setting">
						<dt>
							<strong>전송속도</strong>
						    <input id="transSpeed" type="text" style="margin-left: 5px;" maxlength="5" class="form-control number" placeholder="9600">
						    <input id="settingId" type="hidden"> 
							<strong>bps(1~10000)</strong>
							<em class="message"></em>
						</dt>
						
					</dl>
					<dl class="setting">
						<dt>
						<label>자산 정보</label>
						</dt>
						<dd>
							<strong >소속</strong>
							<div class="select" style="margin-left: 5px;">
								<div class="selected">
									<div class="selected-value">선택</div>
									<div class="arrow"></div>
								</div>
								<ul id="unitId">
								</ul>
							</div>		
							<strong style="padding-left:10px;">함명</strong>
							<div class="select" style="margin-left: 5px;">
								<div class="selected">
									<div data-value='' class="selected-value">선택</div>
									<div class="arrow"></div>
								</div>
								<ul id="shipId">
								</ul>
							</div>			
						</dd>
					</dl>
					<dl class="setting">
					
						<dt>
							<label><input id="systemOpStatus" type="checkbox"> 체계 운용 상태 정보</label>
						</dt>
						<!-- 
						<dd>
						
							<strong>체계운용 상태정보 전송주기</strong>
							
							<div class="select" style="margin-left: 5px;">
								<div class="selected">
									<div class="selected-value">10</div>
									<div class="arrow"></div>
								</div>
								<ul id="systemOpStatusDelay">
								</ul>
							</div>
							
							<strong>sec</strong>
							
						</dd>
						 -->
					</dl>
					<dl th:if="${activeProfile.equals('navy') || activeProfile.equals('land')}" class="setting">
						<dt>
							<label>자산 상태 정보</label>
						</dt>
						<dd>
							<ul class="clfix">
								<li>
									<label><input id="assetStatus" type="checkbox"> 자산 상태</label>
								</li>
							</ul>
						</dd>
					</dl>
					<dl class="setting">
						<dt>
							<label>사이버 위협 정보</label>
						</dt>
						<dd>
						
						<ul class="clfix">
						<li>
						<label>송신위협등급</label>
						</li>
						<li>
							<label><input id="threatImportanceGradeH" type="checkbox"> 상</label>
						</li>
						<li>
							<label><input id="threatImportanceGradeM" type="checkbox"> 중</label>
						</li>
						<li>
							<label><input id="threatImportanceGradeL" type="checkbox"> 하</label>
						</li>
						</ul>
						</dd>
						<dd>
							<ul class="clfix">
								<li>
									<label><input id="detectionTime" type="checkbox"> 탐지 시간</label>
								</li>
								<li>
									<label><input id="srcIp" type="checkbox"> 송신 IP</label>
								</li>
								<li>
									<label><input id="dstIp" type="checkbox"> 수신 IP</label>
								</li>
								<li>
									<label><input id="srcPort" type="checkbox"> 송신 PORT</label>
								</li>
								<li>
									<label><input id="dstPort" type="checkbox"> 수신 PORT</label>
								</li>
								<li>
									<label><input id="protocol" type="checkbox"> 전송 프로토콜</label>
								</li>
								<li>
									<label><input id="fragmentation" type="checkbox"> 파편화 유무</label>
								</li>
								<li>
									<label><input id="fragmentId" type="checkbox"> 파편화 ID</label>
								</li>
								<li>
									<label><input id="detectionThreatName" type="checkbox"> 탐지 위협명</label>
								</li>
								<li>
									<label><input id="threatDetectionMethod" type="checkbox"> 탐지 위협 방식</label>
								</li>
								<li>
									<label><input id="threatImportance" type="checkbox"> 위협 중요도</label>
								</li>
								<li>
									<label><input id="payloadSize" type="checkbox"> 페이로드 크기</label>
								</li>
								<!-- 
								<li>
									<label><input id="payload" type="checkbox"> 페이로드</label>
								</li>
								 -->
							</ul>
						</dd>
					</dl>
				</div>
			</div>
		</div>
		<div class="Popup-footer">
			<a href="javascript:;" class="btn medium darkblue saveBtn"><span class="iconBtn icon_btn_09"></span><strong>적용</strong></a>
			<a href="javascript:;" class="btn medium darkblue popClose"><span class="iconBtn icon_btn_08"></span><strong>취소</strong></a>
		</div>
	</div>
</div>
<!--//modal popup--> 	
<!--message modal popup//-->
<div class="dim-layer">
	<div class="dimBg"></div>
	<div id="messageBox" class="pop-layer ssmall"> 
		<div class="Popup-title">
			<h3><strong>메시지</strong></h3>
			<button class="icon-close">닫기</button>
		</div>
		<div class="Popup-container"> 
			<div class="Popup-contents">
				<div class="messageContent"></div>
			</div>
		</div>
		<div class="Popup-footer ac">
			<a href="javascript:;" class="btn medium darkblue confirmBtn"><span class="iconBtn icon_btn_09"></span><strong>확인</strong></a>
			<a href="javascript:;" class="btn medium darkblue cancelBtn" style="display:none;"><span class="iconBtn icon_btn_08"></span><strong>취소</strong></a>
		</div>
	</div>
</div>
<!--//modal popup--> 
</body>
<script th:inline="javascript">
    gfn_codes();
    let chartColor = 'black';
    let uiMode = /*[[${uiMode}]]*/"";
    let activeProfile = /*[[${activeProfile}]]*/"";
    window.addEventListener('load', (e) => {
    
		try {
			gfn_showChkVal();
			if (uiMode != null && uiMode != "") {
				gfn_setStorage(ncos.uiMode, uiMode);
			}
			if(gfn_getStorage(ncos.uiMode) != 'white'){
				chartColor = 'white';
			}
			setInterval(noticeFunc, ncos.interval);
		
		} catch (e) {
			console.error(e);
		}
	});
	
	
	document.getElementById('whiteList').querySelector('.popAddBtn').addEventListener('click',(e) => {
		e.preventDefault();
		setWhiteListLayerData(e.target);
		preAddEvent(e);
	});
	
	let whiteList = document.querySelector('#whiteList');
    if(whiteList){
    	whiteList.querySelector('.popSaveBtn').addEventListener('click',e => {
    		e.preventDefault();
    		console.log("whiteList save");
    		
    	});
    }
    
    let whiteListReg = document.querySelector('#whiteListReg');
    if(whiteListReg){
    	whiteListReg.querySelector('.saveBtn').addEventListener('click',e => {
    		e.preventDefault();
    		console.log("whiteListReg saveBtn");
    		let requiredParams = {policyName: "정책명"
					             ,srcIp: "송신IP"
					             ,srcMask: "송신Mask"
					             ,srcStartPort: "송신시작Port"
					             ,srcEndPort: "송신종료Port"
					             ,dstIp: "수신IP"
							     ,dstMask: "수신Mask"
							     ,dstStartPort: "수신시작Port"
							     ,dstEndPort: "수신종료Port"
							     ,protocol: "프로토콜"
					             ,policy: "정책"};
    		gfn_asyncTranCall('/saveWhiteList','POST',requiredParams,whiteListReg,trncWhiteListAfterFunc,true);
        	
    	});
    }
    
    const trncWhiteListAfterFunc = () => {
    	console.log("trncWhiteListAfterFunc");
    	whiteListReg.querySelector('.popClose').click();
    	let param = {sch: 'sch'};
	 	gfn_asyncJsonCall('/whiteList','POST',param).then((data) => {
	 		let list = data['list'];
	 		//console.log("whitelist:",list);
	 		gridBind(list,document.querySelector('#whiteList').querySelector('.tablewrap'));
	 	}).then(() => {
	 		
	 	}); 
    	
    }
	
    let addBtn = document.querySelector('.addBtn');
	if(addBtn){
		addBtn.addEventListener('click',(e) => {
			e.preventDefault();
			setLayerData(e.target);
			preAddEvent(e);
		});
	}
	const preAddEvent = (e) => {
		let href = null;
		if(e.target.tagName === 'STRONG'){
			href = e.target.parentElement.getAttribute('href');
		}
		else if(e.target.tagName === 'SPAN'){
			href = e.target.parentElement.getAttribute('href');
		}
		else{
			href = e.target.getAttribute('href');
		}
		layerPopup(href);
	}
	
	document.getElementById('whiteList').querySelector('.popModBtn').addEventListener('click',(e) => {
    	e.preventDefault();
    	let modData = gridClickedData(document.getElementById('whiteList').querySelector('.tablewrap'));
    	console.log("modData:",modData.row);
    	let obj = new Object();
    	let isEmpty = Object.entries(modData.row).length === 0;
    	if(!isEmpty){
    		setWhiteListLayerData(e.target,modData.row);
    		let href = null;
    		if(e.target.tagName === 'STRONG'){
    			href = e.target.parentElement.getAttribute('href');
    		}
    		else if(e.target.tagName === 'SPAN'){
    			href = e.target.parentElement.getAttribute('href');
    		}
    		else{
    			href = e.target.getAttribute('href');
    		}
    		layerPopup(href);
    	}
    	
    });
	
	const setWhiteListLayerData = (target,data) => {
		let whiteListReg = document.getElementById('whiteListReg');
    	gfn_initObj(whiteListReg);
    	createChk(whiteListReg.querySelector('#protocol'),'WHPRO');
		createChk(whiteListReg.querySelector('#policy'),'WHPOL');
    	if(target.parentNode.classList.contains('popModBtn') || target.classList.contains('popModBtn')){
    		let protocol = whiteListReg.querySelector('#protocol');
    		let policy = whiteListReg.querySelector('#policy');
    		document.getElementById('policyId').value = data.id;
    		let inputs = document.getElementById('whiteListReg').getElementsByTagName('input');
    		for (let input of inputs) {
    			if(input.type === 'text'){
    				input.value = data[input.id];
    			}
    		}
    		setCheckValue(protocol.querySelectorAll('li'),protocol.parentNode.querySelector('.selected-value'),data.protocol);
    		setCheckValue(policy.querySelectorAll('li'),policy.parentNode.querySelector('.selected-value'),data.policy);

    	}
    	
    }
    
    document.getElementById('whiteList').querySelector('.popDelBtn').addEventListener('click',(e) => {
    	e.preventDefault();
    	let delData = gridCheckedData(document.getElementById('whiteList').querySelector('.tablewrap'));
    	if(delData.list.length > 0){
    		gfn_asyncTranDataCall('/deleteWhiteList','POST',delData,trncWhiteListAfterFunc,true);
    	}
    });

	const trncAfterFunc = () => {
    	searchFunc();
    }

	const noticeFunc = () => {
		//layerPopup('#notice2');
	}

	const selectBoxs = document.querySelectorAll('.selectBox');
	if(selectBoxs){
		selectBoxs.forEach(selectBox =>{
			selectBox.addEventListener('click',() => {
				showCheckboxes(selectBox);
			});
			
		});
	}

    const selectBoxElements = document.querySelectorAll(".select");
    selectBoxElements.forEach(selectBoxElement => {
    	selectBoxElement.addEventListener("click", function (e) {
    		const targetElement = e.target;
            const isOptionElement = targetElement.classList.contains("option");
            if (isOptionElement) {
    			selectOption(targetElement);
            }
            toggleSelectBox(selectBoxElement);
        });
    });
       
    const initWhiteList = () => {
    	//console.log("whiteList");
     	const headColumns = [{data_id:"chk", width: "45px"}
     		                ,{data_id:"id",label:"",width:"0px"}
 					        ,{data_id:"policyName",label:"정책명" }
 					        ,{data_id:"srcIp",label:"송신IP"}
 					        ,{data_id:"dstIp",label:"수신IP"}
 					        ,{data_id:"srcMask",label:"송신Mask",width:"0px"}
					        ,{data_id:"dstMask",label:"수신Mask",width:"0px"}
 					        ,{data_id:"srcStartPort",label:"송신시작Port"}
 					        ,{data_id:"srcEndPort",label:"송신종료Port"}
 					        ,{data_id:"dstStartPort",label:"수신종료Port"}
 					        ,{data_id:"dstEndPort",label:"수신종료Port"}
 					        ,{data_id:"protocol",label:"전송프로토콜", data_grpCd: "WHPRO"}
 					        ,{data_id:"policy",label:"정책", data_grpCd: "WHPOL", data_type:"select"}
 					       ];
 		gridInit(document.querySelector('#whiteList').querySelector('.tablewrap'),headColumns);
    }
    
    const searchWhiteList = () => {
    	let param = {sch: 'sch'};
	 	gfn_asyncJsonCall('/whiteList','POST',param).then((data) => {
	 		let list = data['list'];
	 		gridBind(list,document.querySelector('#whiteList').querySelector('.tablewrap'));
	 	}).then(() => {
	 		layerPopup('#whiteList');
	 	}); 
    	
    }
    
    let settingThreatAnalysis = document.getElementById('tfpositive')
    const setThreatAnalysis = (param) => {
    	console.log("tfpositive param:",param);
	 	gfn_asyncJsonCall('/getThreatInfo','POST',param).then((data) => {
	 		let info = data['info'];
	 		console.log("info:",info);
	 		gfn_initObj(settingThreatAnalysis);
		 	let inputs = settingThreatAnalysis.getElementsByTagName('input');
			for (let input of inputs) {
				if(input.type === 'text'){
					if(input.id === 'unitId'){
						input.value = gfn_getCodeVal('COUT',info[input.id]);
					}
					else if(input.id === 'shipId'){
						input.value = gfn_getCodeVal('COSH',info[input.id]);
					}
					else if(input.id === 'threatDetectionMethod'){
						input.value = gfn_getCodeVal('THTY',info[input.id]);
					}
					else if(input.id === 'threatImportance'){
						input.value = gfn_getCodeVal('THIM',info[input.id]);
					}
					else if(input.id === 'detectionTime'){
						input.value = gfn_dateFrmt(info[input.id],"yy-mm-dd hh:mi:ss");
					}
					else if(input.id === 'protocol'){
						input.value = gfn_getCodeVal('WHPRO',info[input.id]);
					}
					else{
						input.value = info[input.id];
					}
					let analysisResult = document.getElementById('analysisResult');
					createChk(analysisResult,'THRES');
					if(gfn_nullValue(info['analysisResult']) != ''){
						setCheckValue(analysisResult.querySelectorAll('li'),analysisResult.parentNode.querySelector('.selected-value'),info.analysisResult);
					}
					let actionResult = document.getElementById('actionResult');
					createChk(actionResult,'THACT');
					if(gfn_nullValue(info['actionResult']) != ''){
						setCheckValue(actionResult.querySelectorAll('li'),actionResult.parentNode.querySelector('.selected-value'),info.actionResult);
					}
				}
				else if(input.type === 'hidden'){
					input.value = gfn_nullValue(info[input.id]);
				}
				else if(input.type === 'checkbox'){
					if(info[input.id] == '1' ){
						input.checked = true;
					}
				}
			}
			settingThreatAnalysis.querySelector('#payloadContent').value = gfn_nullValue(info.payloadContent);
	 	}).then(() => {
	 		layerPopup('#tfpositive');
	 	}); 
    }

    if(settingThreatAnalysis){
    	settingThreatAnalysis.querySelector('.saveBtn').addEventListener('click',e => {
    		e.preventDefault();
    		let requiredParams = {analysisResult: "정오탐판정 "
	                             ,actionResult: "조치결과"};
            gfn_asyncTranCall('/saveThreatAnalysis','POST',requiredParams,settingThreatAnalysis,trncThreatAnalysisAfterFunc,true);
    	});
    }
    
    
    const popDataTransConfig = () => {
    	gfn_asyncJsonCall('/getSatelliteTrans','GET',{}).then((data) => {
	 		let info = data['info'];
	 		return info
	 	}).then((data) => {
	 		let settingReg = document.getElementById('settingReg')
	 		let unitId = settingReg.querySelector('#unitId');
    		let shipId = settingReg.querySelector('#shipId');
    		//let systemOpStatusDelay = settingReg.querySelector('#systemOpStatusDelay');
	 		gfn_initObj(settingReg);
	    	createChk(unitId,'COUT');
	    	createChk(shipId,'COSH');
	    	//createChk(systemOpStatusDelay,'STDE');
	    	document.getElementById('settingId').value = data.settingId;
	    	
    		let inputs = document.getElementById('settingReg').getElementsByTagName('input');
    		for (let input of inputs) {
    			if(input.type === 'text'){
    				input.value = data[input.id];
    			}
    			else if(input.type === 'checkbox'){
    				if(data[input.id] == '1' ){
    					input.checked = true;
    				}
    			}
    		}
    		if(data.threatImportanceGrade == '9'){
    			settingReg.querySelector('#threatImportanceGradeH').checked = true;
    			settingReg.querySelector('#threatImportanceGradeM').checked = true;
    			settingReg.querySelector('#threatImportanceGradeL').checked = true;
    		}
    		else if(data.threatImportanceGrade == '8'){
    			settingReg.querySelector('#threatImportanceGradeH').checked = true;
    			settingReg.querySelector('#threatImportanceGradeM').checked = true;
    		}
    		else if(data.threatImportanceGrade == '6'){
    			settingReg.querySelector('#threatImportanceGradeH').checked = true;
    			settingReg.querySelector('#threatImportanceGradeL').checked = true;
    		}
    		else if(data.threatImportanceGrade == '5'){
    			settingReg.querySelector('#threatImportanceGradeH').checked = true;
    		}
    		else if(data.threatImportanceGrade == '4'){
    			settingReg.querySelector('#threatImportanceGradeM').checked = true;
    			settingReg.querySelector('#threatImportanceGradeL').checked = true;
    		}
    		else if(data.threatImportanceGrade == '3'){
    			settingReg.querySelector('#threatImportanceGradeM').checked = true;
    		}
    		else if(data.threatImportanceGrade == '1'){
    			settingReg.querySelector('#threatImportanceGradeL').checked = true;
    		}
    		setCheckValue(unitId.querySelectorAll('li'),unitId.parentNode.querySelector('.selected-value'),data.unitId);
    		setCheckValue(shipId.querySelectorAll('li'),shipId.parentNode.querySelector('.selected-value'),data.shipId);
    		//setCheckValue(systemOpStatusDelay.querySelectorAll('li'),systemOpStatusDelay.parentNode.querySelector('.selected-value'),data.systemOpStatusDelay);
	    	layerPopup('#settingReg');
	 	}); 
    	
    	
    }
    /*
    document.getElementById('payload').addEventListener('click',e=>{
    	if(e.target.checked){
    		 document.getElementById('payloadSize').checked = e.target.checked;
    	}
    });
    */
    document.getElementById('payloadSize').addEventListener('click',e=>{
    	/*
    	if(!e.target.checked){
    		document.getElementById('payload').checked = e.target.checked;
    	}
    	*/
    });
    
    let settingReg = document.querySelector('#settingReg');
    if(settingReg){
    	settingReg.querySelector('.saveBtn').addEventListener('click',e => {
    		e.preventDefault();
    		gfn_initObj(settingReg, true);
    		let transSpeed = document.getElementById('transSpeed');
    		if(transSpeed.value == '' || parseInt(transSpeed.value) > 10000){
    			transSpeed.parentNode.classList.add('error');
    			transSpeed.parentNode.querySelector('.message').textContent = '1~10000 사이의 값을 입력하세요';
    			//transSpeed.focus();
    			
    			return;
    		}
    		let requiredParams = {transSpeed: "전송속도"
					             ,unitId: "소속"
					             ,shipId: "함명"
					             ,systemOpStatus: "체계운용상태정보"};
					             //,systemOpStatus: "체계운용상태정보 전송주기"};
			gfn_asyncTranCall('/saveSatelliteTrans','POST',requiredParams,settingReg,trncSateliteTransAfterFunc,true);
    	});
    }
    
    const trncSateliteTransAfterFunc = () => {
    	settingReg.querySelector('.popClose').click();
    }
   
</script>
</html>