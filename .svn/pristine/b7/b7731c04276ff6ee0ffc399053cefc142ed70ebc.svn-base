<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
	  xmlns:layout="http://www.ultraq.net.nz/thymeleaf/layout"
	  layout:decorate="~{th/cmmn/layout}">
<head>
<title>보고서 서식 관리</title>
</head>
<th:block layout:fragment="content">
<div class="container-wide">
	<div class="container">
		<div class="grid-row">
			<div class="item-box col-12">
				<div class="inner">
					<h4 class="item-title"><span class="iconWrapB icon_03_01"></span><strong>보고서 서식 관리</strong></h4>
				</div>
			</div>
		</div>
		<div class="grid-row">
			<div class="item-box col-12">
				<div class="inner">
					<h4 class="item-title"><span class="iconWrapB icon_search"></span><strong>조회조건</strong></h4>
					<div class="items" style="overflow: visible">
						<!-- item contnets // -->
						<div class="schwrap">
							<ul>
								<li>
									<label>보고서명
										<input id="schReportTitle" type="text" class="form-control korEng" placeholder="보고서명을 입력하세요">
									</label>
								</li>
								<li>
								    <div  class="selectWrap">보고서 유형
									    <div class="multiselect">
											<div class="selectBox">
												<div class="selected">
													<div class="selected-value">전체</div>
													<div class="arrow"></div>
												</div>
												<div class="overSelect"></div>
											</div>
											<div id="schReportType" class="checkboxes" style="display:none;">

											</div>
										</div>
									</div>
								</li>
								<li>
									<div class="selectWrap">등록자
										<div class="multiselect">
											<div class="selectBox">
												<div class="selected">
													<div class="selected-value">전체</div>
													<div class="arrow"></div>
												</div>
												<div class="overSelect"></div>
											</div>
											<div id="schAccountId" class="checkboxes" style="display:none;">
											</div>
										</div>
									</div>
								</li>
								<li>
								    <div class="selectWrap">사용여부
										<div class="select">
											<div class="selected">
												<div data-value='' class="selected-value">전체</div>
												<div class="arrow"></div>
											</div>
											<ul id="schUseFlag">
											</ul>
										</div>
									</div>
								</li>
							</ul>
							<button class="btn medium darkblue schBtn"><span class="iconBtn icon_btn_01"></span><strong>검색</strong></button>
						</div>
						<!-- // item contnets -->
					</div>
				</div>
			</div>
		</div>
		<div class="grid-row">
			<div class="item-box col-12">
				<div class="inner">
					<h4 class="item-title"><span class="iconWrapB icon_list"></span><strong>조회목록</strong></h4>
					<div class="items">
						<div class="tablewrap">
							<table>
								<thead class="tHead">
								</thead>
								<tbody class="tBody">
								</tbody>
							</table>
						</div>
						<div class="page_wrap">
							<div class="page_nation">
								<input type="hidden" name="rowPerPage" class="rowPerPage" value="12">
							</div>
                        </div>
						<div class="btnWrap">
							<div class="left"> <a href="#reportReg" class="btn medium darkblue addBtn"><span class="iconBtn icon_btn_02"></span><strong>추가</strong></a> <a href="#reportReg" class="btn medium darkblue modBtn"><span class="iconBtn icon_btn_03"></span><strong>수정</strong></a> <a href="javascript:;" class="btn medium darkblue delBtn"><span class="iconBtn icon_btn_04"></span><strong>삭제</strong></a> </div>
							<div class="right"> </div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<!--//Grid-->
	</div>
</div>
<!--보고서 서식등록 modal popup//-->
<div class="dim-layer">
	<div class="dimBg"></div>
	<div id="reportReg" class="pop-layer ssmall">
		<!--Title-->
		<div class="Popup-title">
			<h3><span class="iconWrapB icon_03_01"></span><strong>보고서 서식등록</strong></h3>
			<button class="icon-close">닫기</button>
		</div>
		<div class="Popup-container">
			<!--Contens-->
			<div class="Popup-contents">
				<div class="assetWrap">
					<ul>
						<li>
							<label>
								<span>보고서명</span>
								<input type="text" id="reportTitle" class="form-control" placeholder="보고서명">
								<input type="hidden" id="formId">
							</label>
						</li>
						<li>
							<div class="selectWrap">보고서유형
								<div class="select">
									<div class="selected">
										<div class="selected-value">전체</div>
										<div class="arrow"></div>
									</div>
									<ul id="reportType">
									</ul>
								</div>
							</div>
						</li>
					</ul>
					<ul class="topLine">
					    <li>
					    <div><input id="threatAnalysis" type="checkbox"> 위협분석</div>
						</li>
				    </ul>
				    <ul class="topLine">
					     <li>
						    <div class="selectWrap">위험등급
								<div class="multiselect">
									<div class="selectBox">
										<div class="selected">
											<div class="selected-value">선택</div>
											<div class="arrow"></div>
										</div>
										<div class="overSelect"></div>
									</div>
									<div id="threatLevel" class="checkboxes" style="display:none;">
									</div>
								</div>
							</div>
						</li>
					 </ul>
					 <ul class="topLine assetCheck">
					   <li>
					   <div><input id="assetStatus" type="checkbox">자산분석</div>
					  </li>
					 </ul>
					  <ul class="topLine assetSelect">
					   <li>
						    <div class="selectWrap">자산등급
								<div class="select">
									<div class="selected">
										<div class="selected-value">선택</div>
										<div class="arrow"></div>
									</div>
									<ul id="assetLevel" style="height:70px;overflow:auto;">
									</ul>
								</div>
							</div>
						</li>

					</ul>
					<ul class="topLine useFlag">
					    <li>
					   <div><input id="useFlag" type="checkbox">사용여부</div>
					   </li>

					</ul>
				</div>
			</div>
		</div>
		<div class="Popup-footer">
			<a href="javascript:;" class="btn medium darkblue saveBtn"><span class="iconBtn icon_btn_09"></span><strong>확인</strong></a>
			<a href="javascript:;" class="btn medium darkblue popClose"><span class="iconBtn icon_btn_08"></span><strong>취소</strong></a>
		</div>
	</div>
</div>
<!--//modal popup-->
<script th:inline="javascript">
	window.addEventListener('DOMContentLoaded', () => {
		ncos.schMode = 'auto';
		init();
	});
    const init = () => {
    	createMultiChk(document.getElementById('schReportType'),'RETY');
    	gfn_getCodeUser().then((data) => {
    		createMultiChk(document.getElementById('schAccountId'),'UA', data.info);
    		gfn_showChkVal(document.getElementById('schAccountId'));
    	});
    	createChk(document.getElementById('schUseFlag'),'COUSE','전체');
    	/*
    	 const isOptionElement = targetElement.classList.contains("option");
         if (isOptionElement) {
 			selectOption(targetElement);
         }
         toggleSelectBox(selectBoxElement);
         */
    	const headColumns = [{data_id:"id",width: "0px"}
    	                    ,{data_id:"chk", width: "45px"}
					    	,{data_id:"rn",label: "No."}
					        ,{data_id:"reportTitle",label: "보고서 제목"}
					        ,{data_id:"reportType",label:"보고서 유형", data_grpCd:"RETY"}
					        ,{data_id:"threatAnalysis",label:"위험 분석",data_grpCd:"COIN"}
					        ,{data_id:"threatLevel",label: "위협등급" ,data_grpCd:"COIMS", data_class:"threat"}
					        ,{data_id:"assetStatus",label:"자산 분석",data_grpCd:"COIN"}
					        ,{data_id:"assetLevel",label: "자산등급" ,data_grpCd:"COIM", data_class:"threat"}
 					        ,{data_id:"createTime",label:"생성일시",data_dateFrmt:"yy-mm-dd hh:mi:ss"}
					        ,{data_id:"username",label:"등록자", }
					        ,{data_id:"useFlag",label:"사용여부" , data_grpCd:"COUSE"}
					        ,{data_id:"accountId",width: "0px"}
					        ];
        
        if(activeProfile.indexOf('hmm') > -1){
        	document.getElementById('reportReg').querySelector('.assetCheck').remove();
        	document.getElementById('reportReg').querySelector('.assetSelect').remove();
        	document.getElementById('reportReg').querySelector('.checkboxes').style.cssText = 'height:70px;overflow:auto;';
        	headColumns.splice(7,1);
        	headColumns.splice(7,1);
    	}
        if(activeProfile.toLowerCase().indexOf('land') >= 0){
        	document.getElementById('reportReg').querySelector('.assetCheck').remove();
        	document.getElementById('reportReg').querySelector('.assetSelect').remove();
        	headColumns.splice(7,1);
        	headColumns.splice(7,1);
    	}
        gridInit(document.querySelector('.tablewrap'),headColumns);
		pageInit(document.querySelector(".page_nation"),searchFunc,page.rowPerPage);
		const selectBoxElement = document.querySelector(".select");
		const schUseFlagLis= document.querySelector('#schUseFlag').querySelectorAll('li');
        selectOption(schUseFlagLis[1]);

		searchFunc();
    }

    const searchFunc = (invoker) => {
    	pageSearch("/getRptFrmList",document.querySelector(".tablewrap"),document.querySelector(".page_nation"),invoker,searchFunc);
    }


    document.querySelector('.schBtn').addEventListener('click',(e) => {
    	e.preventDefault();
    	ncos.schMode = 'menual';
    	searchFunc(e.target);
    });

    document.querySelector('.modBtn').addEventListener('click',(e) => {
    	e.preventDefault();
    	let modData = gridClickedData(document.querySelector('.tablewrap'));
    	console.log("modData:",modData.row);
    	let obj = new Object();
    	let isEmpty = Object.entries(modData.row).length === 0;
    	if(!isEmpty){
    		setLayerData(e.target,modData.row);
    		let href = null;
    		if(e.target.tagName === 'STRONG'){
    			href = e.target.parentElement.getAttribute('href');
    		}
    		else if(e.target.tagName === 'SPAN'){
    			href = e.target.parentElement.getAttribute('href');
    		}
    		else{
    			href = e.target.getAttribute('href');
    		}
    		layerPopup(href);
    	}

    });

    const setLayerData = (target,data)=> {
    	gfn_initObj(document.getElementById('reportReg'));
    	let assetLevel = document.getElementById('assetLevel');
    	createChk(document.getElementById('reportType'),'RETY');
    	useFlag.checked = true;
    	if(assetLevel){
    		createChk(document.getElementById('assetLevel'),'COIM');
    	}

		createMultiChk(document.getElementById('threatLevel'),'COIM');
		if(activeProfile.indexOf('hmm') > -1){
			let threatAnalysis = document.getElementById('reportReg').querySelector('#threatAnalysis');
			threatAnalysis.checked = true;
			threatAnalysis.addEventListener('click',(e)=> {
				e.preventDefault();
			});
		}
		document.getElementById('reportReg').querySelectorAll('.checkboxes').forEach(checkbox => {
    		let selectedValue = checkbox.parentNode.querySelector('.selected-value');
    		let inputs = checkbox.getElementsByTagName('input');
    		for (let input of inputs) {
    			if(input.type === 'checkbox'){
    				input.addEventListener('click',(e)=> {
    					let labels = e.target.parentNode.parentNode.querySelectorAll('label');
    					let selectedVal = '';
    					labels.forEach(label => {
    						let chk = label.childNodes[0];
    						if(chk.checked){
    							selectedVal += chk.parentNode.textContent+', ';
    						}
    					})
    					let selectedText = selectedVal.trim();
    					selectedValue.textContent = selectedText;
    					if(selectedText.lastIndexOf(',') === selectedText.length-1){
    						selectedValue.textContent = selectedText.substring(0,selectedText.length-1);
    					}
    					if(selectedValue.textContent === '')selectedValue.textContent = '선택';
    				});
    			}
    		}
    	});
    	if(target.parentNode.classList.contains('modBtn') || target.classList.contains('modBtn')){
    		console.log("data:",data);
    		document.getElementById('formId').value = data.id;
    	    let reportType = document.getElementById('reportType');

    		let threatLevel = document.getElementById('threatLevel');
    		setCheckValue(reportType.querySelectorAll('li'),reportType.parentNode.querySelector('.selected-value'),data.reportType);
    		if(assetLevel){
    			setCheckValue(assetLevel.querySelectorAll('li'),assetLevel.parentNode.querySelector('.selected-value'),data.assetLevel);
    		}
    		setMultiImpCheckValue(threatLevel,threatLevel.querySelectorAll('label'),data.threatLevel);
    		let inputs = document.getElementById('reportReg').getElementsByTagName('input');
    		for (let input of inputs) {
    			if(input.type === 'text'){
    				input.value = data[input.id];
    			}
    			if(input.type === 'checkbox'){
    				if(input.parentNode.tagName === 'DIV'){
    					document.getElementById(''+input.id).checked = data[input.id];
    				}
    			}
    		}
    		if(data.assetLevel != '1' && assetLevel){
    			document.getElementById('assetLevel').checked = false;
    		}
    		if(data.assetStatus != '1'){
    			document.getElementById('assetStatus').checked = false;
    		}
    		if(data.threatAnalysis != '1'){
    			document.getElementById('threatAnalysis').checked = false;
    		}
    		if(data.useFlag != '1'){
    			document.getElementById('useFlag').checked = false;
    		}

    	}

    }

    document.getElementById('threatAnalysis').addEventListener('click',(e)=> {
    	if(!e.target.checked){
    		let threatLevel = document.getElementById('threatLevel');
    		let inputs = threatLevel.getElementsByTagName('input');
    		for (let input of inputs) {
    			if(input.type === 'checkbox'){
    				if(input.checked){
    					input.checked = false;
    				}
    			}
    		}
    		let selectedValue = threatLevel.parentNode.querySelector('.selected-value');
    		selectedValue.textContent = '선택';
     	    selectedValue.setAttribute('data-value','');
    	}
    });

    document.getElementById('assetStatus').addEventListener('click',(e)=> {
    	if(!e.target.checked){
    		let assetLevel = document.getElementById('assetLevel');
    		console.log(assetLevel.parentNode);
    		let selectedValue = assetLevel.parentNode.querySelector('.selected-value');
    		selectedValue.textContent = '선택';
     	    selectedValue.setAttribute('data-value','');
    	}
    });


    document.querySelector('.delBtn').addEventListener('click',(e) => {
    	e.preventDefault();
    	let delData = gridCheckedData(document.querySelector('.tablewrap'));
    	let invalidCnt = 0;
    	let accountId = gfn_getStorageItem('accountId',false);
    	let auth = gfn_getStorageItem('auth',false);
    
    	if(delData.list.length > 0){
    		for(let item of delData.list){
    			console.log("item:",item);
    			if(accountId != item.accountId && auth == '1'){
    				invalidCnt++;
    			}

    		}
    		console.log("invalidCnt:",invalidCnt);
    		if(invalidCnt === delData.list.length){
    			msgCall(msg.invalidDelete,false,false);
    		}
    		else{
    			if(invalidCnt > 0){
    				msgCall(msg.possibleDelete,true,false);
    				//msgCall(msg.possibleDelete,true,false,function(){
    					//gfn_asyncTranDataCall('/deleteRptFrm','POST',delData,trncRptFrmAfterFunc,true);
    				//});

    				gfn_asyncTranDataCall('/deleteRptFrm','POST',delData).then((data) => {
    					console.log(data);
    					msgCall(msg.possibleDelete,true,false,() => {
    						document.getElementById('reportReg').querySelector('.popClose').click();
    				    	searchFunc();
    					});
    				});

    			}
    			else{

    			}
    			gfn_asyncTranDataCall('/deleteRptFrm','POST',delData,trncRptFrmAfterFunc,true);

    		}


    	}
    });



    document.getElementById('reportReg').querySelector('.saveBtn').addEventListener('click',(e) => {
    	e.preventDefault();
    	let requiredParams = {reportTitle: "보고서명"
    			             ,reportType: "보고서형식"
    			            // ,threatAnalysis: "위협분석"
    			            // ,threatLevel: "위협등급"
    			            //  ,assetStatus: "자산분석"
    			            // ,assetLevel : "자산등급"
    			             };
    	 if(activeProfile.indexOf('hmm') > -1){
    		 delete requiredParams.assetStatus;
    		 delete requiredParams.assetLevel;
    	 }
 	     gfn_asyncTranCall('/saveRptFrm','POST',requiredParams,document.getElementById('reportReg'),trncRptFrmAfterFunc,true);

    });

    const trncRptFrmAfterFunc = () => {
    	document.getElementById('reportReg').querySelector('.popClose').click();
    	searchFunc();
    }

    /*
	let selectedValue = checkbox.parentNode.querySelector('.selected-value');
	let inputs = checkbox.getElementsByTagName('input');
	for (let input of inputs) {
		if(input.type === 'checkbox'){
			input.addEventListener('click',(e)=> {
				let labels = e.target.parentNode.parentNode.querySelectorAll('label');
				let selectedVal = '';
				labels.forEach(label => {
					let chk = label.childNodes[0];
					if(chk.checked){
						selectedVal += chk.parentNode.textContent+', ';
					}
				})
				let selectedText = selectedVal.trim();
				selectedValue.textContent = selectedText;
				if(selectedText.lastIndexOf(',') === selectedText.length-1){
					selectedValue.textContent = selectedText.substring(0,selectedText.length-1);
				}
				if(selectedValue.textContent === '')selectedValue.textContent = '선';
			});
		}
	}
    */
</script>
</th:block>

</html>
