<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Env">

  <select id="selectConfCount" parameterType="map" resultType="long">
        SELECT COUNT(1)
          FROM USER_ACCOUNT A
          LEFT JOIN ACCOUNT_SETTING B
          ON A.ACCOUNT_ID = B.ACCOUNT_ID
          <include refid="whereEnvList"></include>
  </select>

  <select id="selectConfList" parameterType="map" resultType="CmmnMap">

     	SELECT  RN
     	      , A.SETTING_ID ID
     	      , B.ACCOUNT_ID
     	      , A.ALARM_STATUS
     	      , A.WARNING_STATUS
     	      , A.SESSION_CONTROL_STATUS
     	      , A.ALARM_LEVEL
     	      , A.WARNING_LEVEL
     	      , B.CLASS_ID
     	      , B.AFFILIATION_ID
              , B.USERNAME
        FROM ( SELECT B.SETTING_ID
                    , A.ACCOUNT_ID
                    , B.ALARM_STATUS
     	            , B.WARNING_STATUS
     	            , B.SESSION_CONTROL_STATUS
     	            , B.ALARM_LEVEL
     	            , B.WARNING_LEVEL
                    , ROW_NUMBER() OVER (ORDER BY A.USERNAME ASC) AS RN
               FROM user_account A
               LEFT JOIN account_setting B
               ON A.ACCOUNT_ID = B.ACCOUNT_ID
               <include refid="whereEnvList"></include>
               LIMIT #{startRow},#{rowPerPage}) A
        STRAIGHT_JOIN user_account B
        ON (A.ACCOUNT_ID = B.ACCOUNT_ID)
        ORDER BY RN

  </select>

   <sql id="whereEnvList">
         <where>
	          <if test='schAffiliationId != null and !schAffiliationId.equals("")'>
	          AND A.AFFILIATION_ID IN
	          <foreach collection="schAffiliationId" item="item" open="(" close=")" separator="," index="idx">
	         #{item}
	          </foreach>
	          </if>
	          <if test='schClassId != null and !schClassId.equals("")'>
	          AND A.CLASS_ID IN
	          <foreach collection="schClassId" item="item" open="(" close=")" separator="," index="idx">
	         #{item}
	          </foreach>
	          </if>
	          <if test='schUsername != null and !schUsername.equals("")'>
	          AND A.USERNAME LIKE CONCAT('%',#{schUsername})
	          </if>
          </where>
  </sql>

  <update id="insertAccountSetting" parameterType="map">
        INSERT INTO account_setting(ACCOUNT_ID
                                     , ALARM_STATUS
                                     , WARNING_STATUS
                                     , SESSION_CONTROL_STATUS
                                     , ACCOUNT_SETTING_TIME
                                     , ALARM_LEVEL
                                     , WARNING_LEVEL
                                    )
                               VALUES(#{accountId}
                                     ,#{alarmStatus}
                                     ,#{warningStatus}
                                     ,#{sessionControlStatus}
                                     ,SYSDATE()
                                     ,#{alarmLevel}
                                     ,#{warningLevel}
                                     )
  </update>

   <update id="updateAccountSetting" parameterType="map">
        UPDATE account_setting
                        SET ALARM_STATUS = #{alarmStatus}
                          , WARNING_STATUS = #{warningStatus}
                          , SESSION_CONTROL_STATUS = #{sessionControlStatus}
                          , ACCOUNT_SETTING_TIME = SYSDATE()
                          , ALARM_LEVEL = #{alarmLevel}
                          , WARNING_LEVEL = #{warningLevel}
        WHERE SETTING_ID = #{settingId}
  </update>


   <update id="insertAccountSettingNcos" parameterType="map">
        INSERT INTO account_setting(ACCOUNT_ID
                                     , ALARM_STATUS
                                     , WARNING_STATUS
                                     , SESSION_CONTROL_STATUS
                                     , ACCOUNT_SETTING_TIME
                                     , ALARM_LEVEL
                                     , WARNING_LEVEL
                                     , SETTING_INTEGRITY
                                    )
                               VALUES(#{accountId}
                                     ,#{alarmStatus}
                                     ,#{warningStatus}
                                     ,#{sessionControlStatus}
                                     ,STR_TO_DATE(#{accountSettingTime}, '%Y-%m-%d %H:%i.%s')
                                     ,#{alarmLevel}
                                     ,#{warningLevel}
                                     ,#{integrity}
                                     )
  </update>

   <update id="updateAccountSettingNcos" parameterType="map">
        UPDATE account_setting
                        SET ALARM_STATUS 				= #{alarmStatus}
                          , WARNING_STATUS 				= #{warningStatus}
                          , SESSION_CONTROL_STATUS 		= #{sessionControlStatus}
                          , ACCOUNT_SETTING_TIME 		= STR_TO_DATE(#{accountSettingTime}, '%Y-%m-%d %H:%i.%s')
                          , ALARM_LEVEL 				= #{alarmLevel}
                          , WARNING_LEVEL 				= #{warningLevel}
                          , SETTING_INTEGRITY 			= #{integrity}
        WHERE SETTING_ID = #{settingId}
  </update>

</mapper>