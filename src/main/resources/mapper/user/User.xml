<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="User">
  
 
  <select id="selectUserAccountCount" parameterType="map" resultType="long">
        SELECT COUNT(1) 
         FROM user_account A
         LEFT JOIN account_status B
         ON A.ACCOUNT_ID = B.ACCOUNT_ID
        <include refid="whereUserList"></include>
  </select>

  <select id="selectUserAccountList" parameterType="map" resultType="CmmnMap">
     	  
     	SELECT  RN
     	      , B.ACCOUNT_ID ID
     	      , CLASS_ID
     	      , B.AFFILIATION_ID
     	      , B.USER_ID
     	      , TERMINAL_IP
     	      , B.USERNAME
     	      , B.AUTHORIZATION
     	      , PHONE_NO
     	      , A.ACCOUNT_ACTIVATION
          FROM ( SELECT A.ACCOUNT_ID
                      , B.ACCOUNT_ACTIVATION
                    , ROW_NUMBER() OVER (ORDER BY A.USERNAME DESC) AS RN
                 FROM user_account A
                 LEFT JOIN account_status B
                 ON A.ACCOUNT_ID = B.ACCOUNT_ID
                 <include refid="whereUserList"></include>
                 LIMIT #{startRow},#{rowPerPage}) A
          STRAIGHT_JOIN user_account B
          ON (A.ACCOUNT_ID = B.ACCOUNT_ID)
          ORDER BY RN
  
  </select>
  
  <sql id="whereUserList">
         <where>
	         <if test='schAccountId != null'>
              AND A.ACCOUNT_ID IN 
              <foreach collection="schAccountId" item="item" open="(" close=")" separator="," index="idx">
	            #{item}
		      </foreach> 
              </if>
              <if test='schAccountActivation != null'>
              AND A.ACCOUNT_ACTIVATION IN 
              <foreach collection="schAccountActivation" item="item" open="(" close=")" separator="," index="idx">
	            #{item}
		      </foreach> 
              </if>
              <if test='schAffiliationId != null'>
              AND A.AFFILIATION_ID IN 
              <foreach collection="schAffiliationId" item="item" open="(" close=")" separator="," index="idx">
	            #{item}
		     </foreach> 
              </if>
         </where>
  </sql>
  
  <select id="selectAccountCount" parameterType="UserVo" resultType="long">
       SELECT COUNT(1) 
        FROM user_account 
        <where>
        AND USER_ID = #{userId}
        </where>
  </select>
  
  <!-- 회원가입 -->
   <update id="insertUserAccount" parameterType="UserVo" useGeneratedKeys="true" keyProperty="accountId">
       INSERT INTO user_account (USER_ID
                               , PASSWORD
                               , TERMINAL_IP
                               , USERNAME
                               , CLASS_ID
                               , AFFILIATION_ID
                               , AUTHORIZATION
                               , PHONE_NO
                               , EMAIL
                               , MILITARY_SERVICE_NUMBER)
				        VALUES( #{userId}
				              , #{password}
				              , #{terminalIp, jdbcType=INTEGER}
				              , #{username}
				              , #{classId}
				              , #{affiliationId}
				              , #{authorization}
				              , #{phoneNo}
				              , #{email}
				              , #{militaryServiceNumber} )
     
   </update>
   
   <update id="updateUserAccount" parameterType="UserVo">
        UPDATE user_account SET USERNAME  = #{username, jdbcType=VARCHAR}
				              , CLASS_ID = #{classId, jdbcType=VARCHAR}
                              , AFFILIATION_ID = #{affiliationId, jdbcType=VARCHAR}
				              , AUTHORIZATION = #{authorization, jdbcType=VARCHAR}
				              , PHONE_NO = #{phoneNo, jdbcType=VARCHAR}
				              , EMAIL = #{email, jdbcType=VARCHAR}
				              , MILITARY_SERVICE_NUMBER = #{militaryServiceNumber, jdbcType=VARCHAR}
        WHERE ACCOUNT_ID = #{accountId}
     
   </update>
   
   <update id="insertAccountStatus" parameterType="UserVo" >
       INSERT INTO account_status (ACCOUNT_ID
                               , ACCOUNT_ACTIVATION)
				        VALUES( #{accountId}
				              , #{accountActivation} )
     
   </update>
   
   <update id="updateAccountStatus" parameterType="UserVo" >
       UPDATE  account_status SET ACCOUNT_ACTIVATION = #{accountActivation} 
	   WHERE ACCOUNT_ID = #{accountId}
   </update>
   
   <delete id="deleteAccountSetting" parameterType="map">
        DELETE FROM account_setting
        WHERE ACCOUNT_ID IN
        <foreach collection="list" item="row" open="(" close=")" separator=",">
	        <foreach collection="row" item="col" index="key">
	          <if test='key.equals("id")'>
	            #{col} 
	          </if>
		    </foreach> 
        </foreach>     
   </delete>
   
   <delete id="deleteAccountStatus" parameterType="map">
        DELETE FROM account_status
        WHERE ACCOUNT_ID IN
        <foreach collection="list" item="row" open="(" close=")" separator=",">
	        <foreach collection="row" item="col" index="key">
	          <if test='key.equals("id")'>
	            #{col} 
	          </if>
		    </foreach> 
        </foreach>     
   </delete>
   
    <delete id="deleteUserAccount" parameterType="map">
        DELETE FROM user_account
        WHERE ACCOUNT_ID IN
        <foreach collection="list" item="row" open="(" close=")" separator=",">
	        <foreach collection="row" item="col" index="key">
	          <if test='key.equals("id")'>
	            #{col} 
	          </if>
		    </foreach> 
        </foreach>     
   </delete>
  
 
   
</mapper>